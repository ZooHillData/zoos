/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShadcnRouteImport } from './routes/shadcn/route'
import { Route as ReactTableRouteImport } from './routes/react-table/route'
import { Route as ReactQueryRouteImport } from './routes/react-query/route'
import { Route as ReactFormRouteImport } from './routes/react-form/route'
import { Route as ObjectsRouteImport } from './routes/objects/route'
import { Route as IndexImport } from './routes/index'
import { Route as ShadcnUseReactiveStateImport } from './routes/shadcn/use-reactive-state'
import { Route as ShadcnUseDebounceImport } from './routes/shadcn/use-debounce'
import { Route as ShadcnSelectImport } from './routes/shadcn/select'
import { Route as ShadcnProposeClassNameOverrideImport } from './routes/shadcn/propose-class-name-override'
import { Route as ShadcnContextMenuImport } from './routes/shadcn/context-menu'
import { Route as ShadcnCheckboxImport } from './routes/shadcn/checkbox'
import { Route as ShadcnButtonImport } from './routes/shadcn/button'
import { Route as ReactTableStandardImport } from './routes/react-table/standard'
import { Route as ReactTableCustomColumnsImport } from './routes/react-table/custom-columns'
import { Route as ReactQueryUseQueryImport } from './routes/react-query/use-query'
import { Route as ReactQueryUseMutationImport } from './routes/react-query/use-mutation'
import { Route as ReactFormWithZoosFormImport } from './routes/react-form/with-zoos-form'
import { Route as ReactFormStandardReactFormImport } from './routes/react-form/standard-react-form'
import { Route as ReactFormSelectImport } from './routes/react-form/select'
import { Route as ReactFormInputDebounceImport } from './routes/react-form/input-debounce'
import { Route as ReactFormComboboxCheckboxGroupImport } from './routes/react-form/combobox-checkbox-group'
import { Route as ReactFormCheckboxWithLabelImport } from './routes/react-form/checkbox-with-label'
import { Route as ReactFormCheckboxGroupImport } from './routes/react-form/checkbox-group'
import { Route as ObjectsTableObjectExplorerImport } from './routes/objects/table-object-explorer'
import { Route as AppAuthRouteImport } from './routes/app/auth/route'
import { Route as AppAuthSignupImport } from './routes/app/auth/signup'
import { Route as AppAuthLoginImport } from './routes/app/auth/login'
import { Route as AppAuthForgotPasswordImport } from './routes/app/auth/forgot-password'
import { Route as AppAuthConfirmOtpImport } from './routes/app/auth/confirm-otp'

// Create/Update Routes

const ShadcnRouteRoute = ShadcnRouteImport.update({
  id: '/shadcn',
  path: '/shadcn',
  getParentRoute: () => rootRoute,
} as any)

const ReactTableRouteRoute = ReactTableRouteImport.update({
  id: '/react-table',
  path: '/react-table',
  getParentRoute: () => rootRoute,
} as any)

const ReactQueryRouteRoute = ReactQueryRouteImport.update({
  id: '/react-query',
  path: '/react-query',
  getParentRoute: () => rootRoute,
} as any)

const ReactFormRouteRoute = ReactFormRouteImport.update({
  id: '/react-form',
  path: '/react-form',
  getParentRoute: () => rootRoute,
} as any)

const ObjectsRouteRoute = ObjectsRouteImport.update({
  id: '/objects',
  path: '/objects',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShadcnUseReactiveStateRoute = ShadcnUseReactiveStateImport.update({
  id: '/use-reactive-state',
  path: '/use-reactive-state',
  getParentRoute: () => ShadcnRouteRoute,
} as any)

const ShadcnUseDebounceRoute = ShadcnUseDebounceImport.update({
  id: '/use-debounce',
  path: '/use-debounce',
  getParentRoute: () => ShadcnRouteRoute,
} as any)

const ShadcnSelectRoute = ShadcnSelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => ShadcnRouteRoute,
} as any)

const ShadcnProposeClassNameOverrideRoute =
  ShadcnProposeClassNameOverrideImport.update({
    id: '/propose-class-name-override',
    path: '/propose-class-name-override',
    getParentRoute: () => ShadcnRouteRoute,
  } as any)

const ShadcnContextMenuRoute = ShadcnContextMenuImport.update({
  id: '/context-menu',
  path: '/context-menu',
  getParentRoute: () => ShadcnRouteRoute,
} as any)

const ShadcnCheckboxRoute = ShadcnCheckboxImport.update({
  id: '/checkbox',
  path: '/checkbox',
  getParentRoute: () => ShadcnRouteRoute,
} as any)

const ShadcnButtonRoute = ShadcnButtonImport.update({
  id: '/button',
  path: '/button',
  getParentRoute: () => ShadcnRouteRoute,
} as any)

const ReactTableStandardRoute = ReactTableStandardImport.update({
  id: '/standard',
  path: '/standard',
  getParentRoute: () => ReactTableRouteRoute,
} as any)

const ReactTableCustomColumnsRoute = ReactTableCustomColumnsImport.update({
  id: '/custom-columns',
  path: '/custom-columns',
  getParentRoute: () => ReactTableRouteRoute,
} as any)

const ReactQueryUseQueryRoute = ReactQueryUseQueryImport.update({
  id: '/use-query',
  path: '/use-query',
  getParentRoute: () => ReactQueryRouteRoute,
} as any)

const ReactQueryUseMutationRoute = ReactQueryUseMutationImport.update({
  id: '/use-mutation',
  path: '/use-mutation',
  getParentRoute: () => ReactQueryRouteRoute,
} as any)

const ReactFormWithZoosFormRoute = ReactFormWithZoosFormImport.update({
  id: '/with-zoos-form',
  path: '/with-zoos-form',
  getParentRoute: () => ReactFormRouteRoute,
} as any)

const ReactFormStandardReactFormRoute = ReactFormStandardReactFormImport.update(
  {
    id: '/standard-react-form',
    path: '/standard-react-form',
    getParentRoute: () => ReactFormRouteRoute,
  } as any,
)

const ReactFormSelectRoute = ReactFormSelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => ReactFormRouteRoute,
} as any)

const ReactFormInputDebounceRoute = ReactFormInputDebounceImport.update({
  id: '/input-debounce',
  path: '/input-debounce',
  getParentRoute: () => ReactFormRouteRoute,
} as any)

const ReactFormComboboxCheckboxGroupRoute =
  ReactFormComboboxCheckboxGroupImport.update({
    id: '/combobox-checkbox-group',
    path: '/combobox-checkbox-group',
    getParentRoute: () => ReactFormRouteRoute,
  } as any)

const ReactFormCheckboxWithLabelRoute = ReactFormCheckboxWithLabelImport.update(
  {
    id: '/checkbox-with-label',
    path: '/checkbox-with-label',
    getParentRoute: () => ReactFormRouteRoute,
  } as any,
)

const ReactFormCheckboxGroupRoute = ReactFormCheckboxGroupImport.update({
  id: '/checkbox-group',
  path: '/checkbox-group',
  getParentRoute: () => ReactFormRouteRoute,
} as any)

const ObjectsTableObjectExplorerRoute = ObjectsTableObjectExplorerImport.update(
  {
    id: '/table-object-explorer',
    path: '/table-object-explorer',
    getParentRoute: () => ObjectsRouteRoute,
  } as any,
)

const AppAuthRouteRoute = AppAuthRouteImport.update({
  id: '/app/auth',
  path: '/app/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppAuthSignupRoute = AppAuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AppAuthRouteRoute,
} as any)

const AppAuthLoginRoute = AppAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AppAuthRouteRoute,
} as any)

const AppAuthForgotPasswordRoute = AppAuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AppAuthRouteRoute,
} as any)

const AppAuthConfirmOtpRoute = AppAuthConfirmOtpImport.update({
  id: '/confirm-otp',
  path: '/confirm-otp',
  getParentRoute: () => AppAuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/objects': {
      id: '/objects'
      path: '/objects'
      fullPath: '/objects'
      preLoaderRoute: typeof ObjectsRouteImport
      parentRoute: typeof rootRoute
    }
    '/react-form': {
      id: '/react-form'
      path: '/react-form'
      fullPath: '/react-form'
      preLoaderRoute: typeof ReactFormRouteImport
      parentRoute: typeof rootRoute
    }
    '/react-query': {
      id: '/react-query'
      path: '/react-query'
      fullPath: '/react-query'
      preLoaderRoute: typeof ReactQueryRouteImport
      parentRoute: typeof rootRoute
    }
    '/react-table': {
      id: '/react-table'
      path: '/react-table'
      fullPath: '/react-table'
      preLoaderRoute: typeof ReactTableRouteImport
      parentRoute: typeof rootRoute
    }
    '/shadcn': {
      id: '/shadcn'
      path: '/shadcn'
      fullPath: '/shadcn'
      preLoaderRoute: typeof ShadcnRouteImport
      parentRoute: typeof rootRoute
    }
    '/app/auth': {
      id: '/app/auth'
      path: '/app/auth'
      fullPath: '/app/auth'
      preLoaderRoute: typeof AppAuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/objects/table-object-explorer': {
      id: '/objects/table-object-explorer'
      path: '/table-object-explorer'
      fullPath: '/objects/table-object-explorer'
      preLoaderRoute: typeof ObjectsTableObjectExplorerImport
      parentRoute: typeof ObjectsRouteImport
    }
    '/react-form/checkbox-group': {
      id: '/react-form/checkbox-group'
      path: '/checkbox-group'
      fullPath: '/react-form/checkbox-group'
      preLoaderRoute: typeof ReactFormCheckboxGroupImport
      parentRoute: typeof ReactFormRouteImport
    }
    '/react-form/checkbox-with-label': {
      id: '/react-form/checkbox-with-label'
      path: '/checkbox-with-label'
      fullPath: '/react-form/checkbox-with-label'
      preLoaderRoute: typeof ReactFormCheckboxWithLabelImport
      parentRoute: typeof ReactFormRouteImport
    }
    '/react-form/combobox-checkbox-group': {
      id: '/react-form/combobox-checkbox-group'
      path: '/combobox-checkbox-group'
      fullPath: '/react-form/combobox-checkbox-group'
      preLoaderRoute: typeof ReactFormComboboxCheckboxGroupImport
      parentRoute: typeof ReactFormRouteImport
    }
    '/react-form/input-debounce': {
      id: '/react-form/input-debounce'
      path: '/input-debounce'
      fullPath: '/react-form/input-debounce'
      preLoaderRoute: typeof ReactFormInputDebounceImport
      parentRoute: typeof ReactFormRouteImport
    }
    '/react-form/select': {
      id: '/react-form/select'
      path: '/select'
      fullPath: '/react-form/select'
      preLoaderRoute: typeof ReactFormSelectImport
      parentRoute: typeof ReactFormRouteImport
    }
    '/react-form/standard-react-form': {
      id: '/react-form/standard-react-form'
      path: '/standard-react-form'
      fullPath: '/react-form/standard-react-form'
      preLoaderRoute: typeof ReactFormStandardReactFormImport
      parentRoute: typeof ReactFormRouteImport
    }
    '/react-form/with-zoos-form': {
      id: '/react-form/with-zoos-form'
      path: '/with-zoos-form'
      fullPath: '/react-form/with-zoos-form'
      preLoaderRoute: typeof ReactFormWithZoosFormImport
      parentRoute: typeof ReactFormRouteImport
    }
    '/react-query/use-mutation': {
      id: '/react-query/use-mutation'
      path: '/use-mutation'
      fullPath: '/react-query/use-mutation'
      preLoaderRoute: typeof ReactQueryUseMutationImport
      parentRoute: typeof ReactQueryRouteImport
    }
    '/react-query/use-query': {
      id: '/react-query/use-query'
      path: '/use-query'
      fullPath: '/react-query/use-query'
      preLoaderRoute: typeof ReactQueryUseQueryImport
      parentRoute: typeof ReactQueryRouteImport
    }
    '/react-table/custom-columns': {
      id: '/react-table/custom-columns'
      path: '/custom-columns'
      fullPath: '/react-table/custom-columns'
      preLoaderRoute: typeof ReactTableCustomColumnsImport
      parentRoute: typeof ReactTableRouteImport
    }
    '/react-table/standard': {
      id: '/react-table/standard'
      path: '/standard'
      fullPath: '/react-table/standard'
      preLoaderRoute: typeof ReactTableStandardImport
      parentRoute: typeof ReactTableRouteImport
    }
    '/shadcn/button': {
      id: '/shadcn/button'
      path: '/button'
      fullPath: '/shadcn/button'
      preLoaderRoute: typeof ShadcnButtonImport
      parentRoute: typeof ShadcnRouteImport
    }
    '/shadcn/checkbox': {
      id: '/shadcn/checkbox'
      path: '/checkbox'
      fullPath: '/shadcn/checkbox'
      preLoaderRoute: typeof ShadcnCheckboxImport
      parentRoute: typeof ShadcnRouteImport
    }
    '/shadcn/context-menu': {
      id: '/shadcn/context-menu'
      path: '/context-menu'
      fullPath: '/shadcn/context-menu'
      preLoaderRoute: typeof ShadcnContextMenuImport
      parentRoute: typeof ShadcnRouteImport
    }
    '/shadcn/propose-class-name-override': {
      id: '/shadcn/propose-class-name-override'
      path: '/propose-class-name-override'
      fullPath: '/shadcn/propose-class-name-override'
      preLoaderRoute: typeof ShadcnProposeClassNameOverrideImport
      parentRoute: typeof ShadcnRouteImport
    }
    '/shadcn/select': {
      id: '/shadcn/select'
      path: '/select'
      fullPath: '/shadcn/select'
      preLoaderRoute: typeof ShadcnSelectImport
      parentRoute: typeof ShadcnRouteImport
    }
    '/shadcn/use-debounce': {
      id: '/shadcn/use-debounce'
      path: '/use-debounce'
      fullPath: '/shadcn/use-debounce'
      preLoaderRoute: typeof ShadcnUseDebounceImport
      parentRoute: typeof ShadcnRouteImport
    }
    '/shadcn/use-reactive-state': {
      id: '/shadcn/use-reactive-state'
      path: '/use-reactive-state'
      fullPath: '/shadcn/use-reactive-state'
      preLoaderRoute: typeof ShadcnUseReactiveStateImport
      parentRoute: typeof ShadcnRouteImport
    }
    '/app/auth/confirm-otp': {
      id: '/app/auth/confirm-otp'
      path: '/confirm-otp'
      fullPath: '/app/auth/confirm-otp'
      preLoaderRoute: typeof AppAuthConfirmOtpImport
      parentRoute: typeof AppAuthRouteImport
    }
    '/app/auth/forgot-password': {
      id: '/app/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/app/auth/forgot-password'
      preLoaderRoute: typeof AppAuthForgotPasswordImport
      parentRoute: typeof AppAuthRouteImport
    }
    '/app/auth/login': {
      id: '/app/auth/login'
      path: '/login'
      fullPath: '/app/auth/login'
      preLoaderRoute: typeof AppAuthLoginImport
      parentRoute: typeof AppAuthRouteImport
    }
    '/app/auth/signup': {
      id: '/app/auth/signup'
      path: '/signup'
      fullPath: '/app/auth/signup'
      preLoaderRoute: typeof AppAuthSignupImport
      parentRoute: typeof AppAuthRouteImport
    }
  }
}

// Create and export the route tree

interface ObjectsRouteRouteChildren {
  ObjectsTableObjectExplorerRoute: typeof ObjectsTableObjectExplorerRoute
}

const ObjectsRouteRouteChildren: ObjectsRouteRouteChildren = {
  ObjectsTableObjectExplorerRoute: ObjectsTableObjectExplorerRoute,
}

const ObjectsRouteRouteWithChildren = ObjectsRouteRoute._addFileChildren(
  ObjectsRouteRouteChildren,
)

interface ReactFormRouteRouteChildren {
  ReactFormCheckboxGroupRoute: typeof ReactFormCheckboxGroupRoute
  ReactFormCheckboxWithLabelRoute: typeof ReactFormCheckboxWithLabelRoute
  ReactFormComboboxCheckboxGroupRoute: typeof ReactFormComboboxCheckboxGroupRoute
  ReactFormInputDebounceRoute: typeof ReactFormInputDebounceRoute
  ReactFormSelectRoute: typeof ReactFormSelectRoute
  ReactFormStandardReactFormRoute: typeof ReactFormStandardReactFormRoute
  ReactFormWithZoosFormRoute: typeof ReactFormWithZoosFormRoute
}

const ReactFormRouteRouteChildren: ReactFormRouteRouteChildren = {
  ReactFormCheckboxGroupRoute: ReactFormCheckboxGroupRoute,
  ReactFormCheckboxWithLabelRoute: ReactFormCheckboxWithLabelRoute,
  ReactFormComboboxCheckboxGroupRoute: ReactFormComboboxCheckboxGroupRoute,
  ReactFormInputDebounceRoute: ReactFormInputDebounceRoute,
  ReactFormSelectRoute: ReactFormSelectRoute,
  ReactFormStandardReactFormRoute: ReactFormStandardReactFormRoute,
  ReactFormWithZoosFormRoute: ReactFormWithZoosFormRoute,
}

const ReactFormRouteRouteWithChildren = ReactFormRouteRoute._addFileChildren(
  ReactFormRouteRouteChildren,
)

interface ReactQueryRouteRouteChildren {
  ReactQueryUseMutationRoute: typeof ReactQueryUseMutationRoute
  ReactQueryUseQueryRoute: typeof ReactQueryUseQueryRoute
}

const ReactQueryRouteRouteChildren: ReactQueryRouteRouteChildren = {
  ReactQueryUseMutationRoute: ReactQueryUseMutationRoute,
  ReactQueryUseQueryRoute: ReactQueryUseQueryRoute,
}

const ReactQueryRouteRouteWithChildren = ReactQueryRouteRoute._addFileChildren(
  ReactQueryRouteRouteChildren,
)

interface ReactTableRouteRouteChildren {
  ReactTableCustomColumnsRoute: typeof ReactTableCustomColumnsRoute
  ReactTableStandardRoute: typeof ReactTableStandardRoute
}

const ReactTableRouteRouteChildren: ReactTableRouteRouteChildren = {
  ReactTableCustomColumnsRoute: ReactTableCustomColumnsRoute,
  ReactTableStandardRoute: ReactTableStandardRoute,
}

const ReactTableRouteRouteWithChildren = ReactTableRouteRoute._addFileChildren(
  ReactTableRouteRouteChildren,
)

interface ShadcnRouteRouteChildren {
  ShadcnButtonRoute: typeof ShadcnButtonRoute
  ShadcnCheckboxRoute: typeof ShadcnCheckboxRoute
  ShadcnContextMenuRoute: typeof ShadcnContextMenuRoute
  ShadcnProposeClassNameOverrideRoute: typeof ShadcnProposeClassNameOverrideRoute
  ShadcnSelectRoute: typeof ShadcnSelectRoute
  ShadcnUseDebounceRoute: typeof ShadcnUseDebounceRoute
  ShadcnUseReactiveStateRoute: typeof ShadcnUseReactiveStateRoute
}

const ShadcnRouteRouteChildren: ShadcnRouteRouteChildren = {
  ShadcnButtonRoute: ShadcnButtonRoute,
  ShadcnCheckboxRoute: ShadcnCheckboxRoute,
  ShadcnContextMenuRoute: ShadcnContextMenuRoute,
  ShadcnProposeClassNameOverrideRoute: ShadcnProposeClassNameOverrideRoute,
  ShadcnSelectRoute: ShadcnSelectRoute,
  ShadcnUseDebounceRoute: ShadcnUseDebounceRoute,
  ShadcnUseReactiveStateRoute: ShadcnUseReactiveStateRoute,
}

const ShadcnRouteRouteWithChildren = ShadcnRouteRoute._addFileChildren(
  ShadcnRouteRouteChildren,
)

interface AppAuthRouteRouteChildren {
  AppAuthConfirmOtpRoute: typeof AppAuthConfirmOtpRoute
  AppAuthForgotPasswordRoute: typeof AppAuthForgotPasswordRoute
  AppAuthLoginRoute: typeof AppAuthLoginRoute
  AppAuthSignupRoute: typeof AppAuthSignupRoute
}

const AppAuthRouteRouteChildren: AppAuthRouteRouteChildren = {
  AppAuthConfirmOtpRoute: AppAuthConfirmOtpRoute,
  AppAuthForgotPasswordRoute: AppAuthForgotPasswordRoute,
  AppAuthLoginRoute: AppAuthLoginRoute,
  AppAuthSignupRoute: AppAuthSignupRoute,
}

const AppAuthRouteRouteWithChildren = AppAuthRouteRoute._addFileChildren(
  AppAuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/objects': typeof ObjectsRouteRouteWithChildren
  '/react-form': typeof ReactFormRouteRouteWithChildren
  '/react-query': typeof ReactQueryRouteRouteWithChildren
  '/react-table': typeof ReactTableRouteRouteWithChildren
  '/shadcn': typeof ShadcnRouteRouteWithChildren
  '/app/auth': typeof AppAuthRouteRouteWithChildren
  '/objects/table-object-explorer': typeof ObjectsTableObjectExplorerRoute
  '/react-form/checkbox-group': typeof ReactFormCheckboxGroupRoute
  '/react-form/checkbox-with-label': typeof ReactFormCheckboxWithLabelRoute
  '/react-form/combobox-checkbox-group': typeof ReactFormComboboxCheckboxGroupRoute
  '/react-form/input-debounce': typeof ReactFormInputDebounceRoute
  '/react-form/select': typeof ReactFormSelectRoute
  '/react-form/standard-react-form': typeof ReactFormStandardReactFormRoute
  '/react-form/with-zoos-form': typeof ReactFormWithZoosFormRoute
  '/react-query/use-mutation': typeof ReactQueryUseMutationRoute
  '/react-query/use-query': typeof ReactQueryUseQueryRoute
  '/react-table/custom-columns': typeof ReactTableCustomColumnsRoute
  '/react-table/standard': typeof ReactTableStandardRoute
  '/shadcn/button': typeof ShadcnButtonRoute
  '/shadcn/checkbox': typeof ShadcnCheckboxRoute
  '/shadcn/context-menu': typeof ShadcnContextMenuRoute
  '/shadcn/propose-class-name-override': typeof ShadcnProposeClassNameOverrideRoute
  '/shadcn/select': typeof ShadcnSelectRoute
  '/shadcn/use-debounce': typeof ShadcnUseDebounceRoute
  '/shadcn/use-reactive-state': typeof ShadcnUseReactiveStateRoute
  '/app/auth/confirm-otp': typeof AppAuthConfirmOtpRoute
  '/app/auth/forgot-password': typeof AppAuthForgotPasswordRoute
  '/app/auth/login': typeof AppAuthLoginRoute
  '/app/auth/signup': typeof AppAuthSignupRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/objects': typeof ObjectsRouteRouteWithChildren
  '/react-form': typeof ReactFormRouteRouteWithChildren
  '/react-query': typeof ReactQueryRouteRouteWithChildren
  '/react-table': typeof ReactTableRouteRouteWithChildren
  '/shadcn': typeof ShadcnRouteRouteWithChildren
  '/app/auth': typeof AppAuthRouteRouteWithChildren
  '/objects/table-object-explorer': typeof ObjectsTableObjectExplorerRoute
  '/react-form/checkbox-group': typeof ReactFormCheckboxGroupRoute
  '/react-form/checkbox-with-label': typeof ReactFormCheckboxWithLabelRoute
  '/react-form/combobox-checkbox-group': typeof ReactFormComboboxCheckboxGroupRoute
  '/react-form/input-debounce': typeof ReactFormInputDebounceRoute
  '/react-form/select': typeof ReactFormSelectRoute
  '/react-form/standard-react-form': typeof ReactFormStandardReactFormRoute
  '/react-form/with-zoos-form': typeof ReactFormWithZoosFormRoute
  '/react-query/use-mutation': typeof ReactQueryUseMutationRoute
  '/react-query/use-query': typeof ReactQueryUseQueryRoute
  '/react-table/custom-columns': typeof ReactTableCustomColumnsRoute
  '/react-table/standard': typeof ReactTableStandardRoute
  '/shadcn/button': typeof ShadcnButtonRoute
  '/shadcn/checkbox': typeof ShadcnCheckboxRoute
  '/shadcn/context-menu': typeof ShadcnContextMenuRoute
  '/shadcn/propose-class-name-override': typeof ShadcnProposeClassNameOverrideRoute
  '/shadcn/select': typeof ShadcnSelectRoute
  '/shadcn/use-debounce': typeof ShadcnUseDebounceRoute
  '/shadcn/use-reactive-state': typeof ShadcnUseReactiveStateRoute
  '/app/auth/confirm-otp': typeof AppAuthConfirmOtpRoute
  '/app/auth/forgot-password': typeof AppAuthForgotPasswordRoute
  '/app/auth/login': typeof AppAuthLoginRoute
  '/app/auth/signup': typeof AppAuthSignupRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/objects': typeof ObjectsRouteRouteWithChildren
  '/react-form': typeof ReactFormRouteRouteWithChildren
  '/react-query': typeof ReactQueryRouteRouteWithChildren
  '/react-table': typeof ReactTableRouteRouteWithChildren
  '/shadcn': typeof ShadcnRouteRouteWithChildren
  '/app/auth': typeof AppAuthRouteRouteWithChildren
  '/objects/table-object-explorer': typeof ObjectsTableObjectExplorerRoute
  '/react-form/checkbox-group': typeof ReactFormCheckboxGroupRoute
  '/react-form/checkbox-with-label': typeof ReactFormCheckboxWithLabelRoute
  '/react-form/combobox-checkbox-group': typeof ReactFormComboboxCheckboxGroupRoute
  '/react-form/input-debounce': typeof ReactFormInputDebounceRoute
  '/react-form/select': typeof ReactFormSelectRoute
  '/react-form/standard-react-form': typeof ReactFormStandardReactFormRoute
  '/react-form/with-zoos-form': typeof ReactFormWithZoosFormRoute
  '/react-query/use-mutation': typeof ReactQueryUseMutationRoute
  '/react-query/use-query': typeof ReactQueryUseQueryRoute
  '/react-table/custom-columns': typeof ReactTableCustomColumnsRoute
  '/react-table/standard': typeof ReactTableStandardRoute
  '/shadcn/button': typeof ShadcnButtonRoute
  '/shadcn/checkbox': typeof ShadcnCheckboxRoute
  '/shadcn/context-menu': typeof ShadcnContextMenuRoute
  '/shadcn/propose-class-name-override': typeof ShadcnProposeClassNameOverrideRoute
  '/shadcn/select': typeof ShadcnSelectRoute
  '/shadcn/use-debounce': typeof ShadcnUseDebounceRoute
  '/shadcn/use-reactive-state': typeof ShadcnUseReactiveStateRoute
  '/app/auth/confirm-otp': typeof AppAuthConfirmOtpRoute
  '/app/auth/forgot-password': typeof AppAuthForgotPasswordRoute
  '/app/auth/login': typeof AppAuthLoginRoute
  '/app/auth/signup': typeof AppAuthSignupRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/objects'
    | '/react-form'
    | '/react-query'
    | '/react-table'
    | '/shadcn'
    | '/app/auth'
    | '/objects/table-object-explorer'
    | '/react-form/checkbox-group'
    | '/react-form/checkbox-with-label'
    | '/react-form/combobox-checkbox-group'
    | '/react-form/input-debounce'
    | '/react-form/select'
    | '/react-form/standard-react-form'
    | '/react-form/with-zoos-form'
    | '/react-query/use-mutation'
    | '/react-query/use-query'
    | '/react-table/custom-columns'
    | '/react-table/standard'
    | '/shadcn/button'
    | '/shadcn/checkbox'
    | '/shadcn/context-menu'
    | '/shadcn/propose-class-name-override'
    | '/shadcn/select'
    | '/shadcn/use-debounce'
    | '/shadcn/use-reactive-state'
    | '/app/auth/confirm-otp'
    | '/app/auth/forgot-password'
    | '/app/auth/login'
    | '/app/auth/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/objects'
    | '/react-form'
    | '/react-query'
    | '/react-table'
    | '/shadcn'
    | '/app/auth'
    | '/objects/table-object-explorer'
    | '/react-form/checkbox-group'
    | '/react-form/checkbox-with-label'
    | '/react-form/combobox-checkbox-group'
    | '/react-form/input-debounce'
    | '/react-form/select'
    | '/react-form/standard-react-form'
    | '/react-form/with-zoos-form'
    | '/react-query/use-mutation'
    | '/react-query/use-query'
    | '/react-table/custom-columns'
    | '/react-table/standard'
    | '/shadcn/button'
    | '/shadcn/checkbox'
    | '/shadcn/context-menu'
    | '/shadcn/propose-class-name-override'
    | '/shadcn/select'
    | '/shadcn/use-debounce'
    | '/shadcn/use-reactive-state'
    | '/app/auth/confirm-otp'
    | '/app/auth/forgot-password'
    | '/app/auth/login'
    | '/app/auth/signup'
  id:
    | '__root__'
    | '/'
    | '/objects'
    | '/react-form'
    | '/react-query'
    | '/react-table'
    | '/shadcn'
    | '/app/auth'
    | '/objects/table-object-explorer'
    | '/react-form/checkbox-group'
    | '/react-form/checkbox-with-label'
    | '/react-form/combobox-checkbox-group'
    | '/react-form/input-debounce'
    | '/react-form/select'
    | '/react-form/standard-react-form'
    | '/react-form/with-zoos-form'
    | '/react-query/use-mutation'
    | '/react-query/use-query'
    | '/react-table/custom-columns'
    | '/react-table/standard'
    | '/shadcn/button'
    | '/shadcn/checkbox'
    | '/shadcn/context-menu'
    | '/shadcn/propose-class-name-override'
    | '/shadcn/select'
    | '/shadcn/use-debounce'
    | '/shadcn/use-reactive-state'
    | '/app/auth/confirm-otp'
    | '/app/auth/forgot-password'
    | '/app/auth/login'
    | '/app/auth/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ObjectsRouteRoute: typeof ObjectsRouteRouteWithChildren
  ReactFormRouteRoute: typeof ReactFormRouteRouteWithChildren
  ReactQueryRouteRoute: typeof ReactQueryRouteRouteWithChildren
  ReactTableRouteRoute: typeof ReactTableRouteRouteWithChildren
  ShadcnRouteRoute: typeof ShadcnRouteRouteWithChildren
  AppAuthRouteRoute: typeof AppAuthRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ObjectsRouteRoute: ObjectsRouteRouteWithChildren,
  ReactFormRouteRoute: ReactFormRouteRouteWithChildren,
  ReactQueryRouteRoute: ReactQueryRouteRouteWithChildren,
  ReactTableRouteRoute: ReactTableRouteRouteWithChildren,
  ShadcnRouteRoute: ShadcnRouteRouteWithChildren,
  AppAuthRouteRoute: AppAuthRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/objects",
        "/react-form",
        "/react-query",
        "/react-table",
        "/shadcn",
        "/app/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/objects": {
      "filePath": "objects/route.tsx",
      "children": [
        "/objects/table-object-explorer"
      ]
    },
    "/react-form": {
      "filePath": "react-form/route.tsx",
      "children": [
        "/react-form/checkbox-group",
        "/react-form/checkbox-with-label",
        "/react-form/combobox-checkbox-group",
        "/react-form/input-debounce",
        "/react-form/select",
        "/react-form/standard-react-form",
        "/react-form/with-zoos-form"
      ]
    },
    "/react-query": {
      "filePath": "react-query/route.tsx",
      "children": [
        "/react-query/use-mutation",
        "/react-query/use-query"
      ]
    },
    "/react-table": {
      "filePath": "react-table/route.tsx",
      "children": [
        "/react-table/custom-columns",
        "/react-table/standard"
      ]
    },
    "/shadcn": {
      "filePath": "shadcn/route.tsx",
      "children": [
        "/shadcn/button",
        "/shadcn/checkbox",
        "/shadcn/context-menu",
        "/shadcn/propose-class-name-override",
        "/shadcn/select",
        "/shadcn/use-debounce",
        "/shadcn/use-reactive-state"
      ]
    },
    "/app/auth": {
      "filePath": "app/auth/route.tsx",
      "children": [
        "/app/auth/confirm-otp",
        "/app/auth/forgot-password",
        "/app/auth/login",
        "/app/auth/signup"
      ]
    },
    "/objects/table-object-explorer": {
      "filePath": "objects/table-object-explorer.tsx",
      "parent": "/objects"
    },
    "/react-form/checkbox-group": {
      "filePath": "react-form/checkbox-group.tsx",
      "parent": "/react-form"
    },
    "/react-form/checkbox-with-label": {
      "filePath": "react-form/checkbox-with-label.tsx",
      "parent": "/react-form"
    },
    "/react-form/combobox-checkbox-group": {
      "filePath": "react-form/combobox-checkbox-group.tsx",
      "parent": "/react-form"
    },
    "/react-form/input-debounce": {
      "filePath": "react-form/input-debounce.tsx",
      "parent": "/react-form"
    },
    "/react-form/select": {
      "filePath": "react-form/select.tsx",
      "parent": "/react-form"
    },
    "/react-form/standard-react-form": {
      "filePath": "react-form/standard-react-form.tsx",
      "parent": "/react-form"
    },
    "/react-form/with-zoos-form": {
      "filePath": "react-form/with-zoos-form.tsx",
      "parent": "/react-form"
    },
    "/react-query/use-mutation": {
      "filePath": "react-query/use-mutation.tsx",
      "parent": "/react-query"
    },
    "/react-query/use-query": {
      "filePath": "react-query/use-query.tsx",
      "parent": "/react-query"
    },
    "/react-table/custom-columns": {
      "filePath": "react-table/custom-columns.tsx",
      "parent": "/react-table"
    },
    "/react-table/standard": {
      "filePath": "react-table/standard.tsx",
      "parent": "/react-table"
    },
    "/shadcn/button": {
      "filePath": "shadcn/button.tsx",
      "parent": "/shadcn"
    },
    "/shadcn/checkbox": {
      "filePath": "shadcn/checkbox.tsx",
      "parent": "/shadcn"
    },
    "/shadcn/context-menu": {
      "filePath": "shadcn/context-menu.tsx",
      "parent": "/shadcn"
    },
    "/shadcn/propose-class-name-override": {
      "filePath": "shadcn/propose-class-name-override.tsx",
      "parent": "/shadcn"
    },
    "/shadcn/select": {
      "filePath": "shadcn/select.tsx",
      "parent": "/shadcn"
    },
    "/shadcn/use-debounce": {
      "filePath": "shadcn/use-debounce.tsx",
      "parent": "/shadcn"
    },
    "/shadcn/use-reactive-state": {
      "filePath": "shadcn/use-reactive-state.tsx",
      "parent": "/shadcn"
    },
    "/app/auth/confirm-otp": {
      "filePath": "app/auth/confirm-otp.tsx",
      "parent": "/app/auth"
    },
    "/app/auth/forgot-password": {
      "filePath": "app/auth/forgot-password.tsx",
      "parent": "/app/auth"
    },
    "/app/auth/login": {
      "filePath": "app/auth/login.tsx",
      "parent": "/app/auth"
    },
    "/app/auth/signup": {
      "filePath": "app/auth/signup.tsx",
      "parent": "/app/auth"
    }
  }
}
ROUTE_MANIFEST_END */
