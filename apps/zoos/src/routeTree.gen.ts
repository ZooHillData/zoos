/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GetStartedImport } from './routes/get-started'
import { Route as IndexImport } from './routes/index'
import { Route as CommunityIndexImport } from './routes/community/index'
import { Route as FeaturesControlledDialogImport } from './routes/features/controlled-dialog'
import { Route as FeaturesObjectsRouteImport } from './routes/features/objects/route'
import { Route as FeaturesFileBrowserRouteImport } from './routes/features/file-browser/route'
import { Route as FeaturesAuthRouteImport } from './routes/features/auth/route'
import { Route as CoreShadcnRouteImport } from './routes/core/shadcn/route'
import { Route as CoreReactTableRouteImport } from './routes/core/react-table/route'
import { Route as CoreReactQueryRouteImport } from './routes/core/react-query/route'
import { Route as CoreReactFormRouteImport } from './routes/core/react-form/route'
import { Route as FeaturesFileBrowserIndexImport } from './routes/features/file-browser/index'
import { Route as FeaturesAuthIndexImport } from './routes/features/auth/index'
import { Route as CoreReactGridLayoutIndexImport } from './routes/core/react-grid-layout/index'
import { Route as FeaturesObjectsExplorerImport } from './routes/features/objects/explorer'
import { Route as CoreShadcnUseReactiveStateImport } from './routes/core/shadcn/use-reactive-state'
import { Route as CoreShadcnUseDebounceImport } from './routes/core/shadcn/use-debounce'
import { Route as CoreShadcnSelectImport } from './routes/core/shadcn/select'
import { Route as CoreShadcnProposeClassNameOverrideImport } from './routes/core/shadcn/propose-class-name-override'
import { Route as CoreShadcnPopoverImport } from './routes/core/shadcn/popover'
import { Route as CoreShadcnContextMenuImport } from './routes/core/shadcn/context-menu'
import { Route as CoreShadcnCheckboxImport } from './routes/core/shadcn/checkbox'
import { Route as CoreShadcnButtonImport } from './routes/core/shadcn/button'
import { Route as CoreReactTableStandardImport } from './routes/core/react-table/standard'
import { Route as CoreReactTableMergeColumnsImport } from './routes/core/react-table/merge-columns'
import { Route as CoreReactTableFullCustomizationImport } from './routes/core/react-table/full-customization'
import { Route as CoreReactTableExpandRowsControlImport } from './routes/core/react-table/expand-rows-control'
import { Route as CoreReactTableExpandRowsCellImport } from './routes/core/react-table/expand-rows-cell'
import { Route as CoreReactTableColumnFiltersImport } from './routes/core/react-table/column-filters'
import { Route as CoreReactQueryUseQueryImport } from './routes/core/react-query/use-query'
import { Route as CoreReactQueryUseMutationImport } from './routes/core/react-query/use-mutation'
import { Route as CoreReactFormWithZoosFormImport } from './routes/core/react-form/with-zoos-form'
import { Route as CoreReactFormStandardReactFormImport } from './routes/core/react-form/standard-react-form'
import { Route as CoreReactFormSelectImport } from './routes/core/react-form/select'
import { Route as CoreReactFormInputDebounceImport } from './routes/core/react-form/input-debounce'
import { Route as CoreReactFormComboboxCheckboxGroupImport } from './routes/core/react-form/combobox-checkbox-group'
import { Route as CoreReactFormCheckboxWithLabelImport } from './routes/core/react-form/checkbox-with-label'
import { Route as CoreReactFormCheckboxGroupImport } from './routes/core/react-form/checkbox-group'
import { Route as CommunityReactTableColumnDndImport } from './routes/community/react-table/column-dnd'
import { Route as CommunityDndKitDragAndDropTabsImport } from './routes/community/dnd-kit/drag-and-drop-tabs'
import { Route as CommunityDndKitDragAndDropSimpleImport } from './routes/community/dnd-kit/drag-and-drop-simple'

// Create/Update Routes

const GetStartedRoute = GetStartedImport.update({
  id: '/get-started',
  path: '/get-started',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CommunityIndexRoute = CommunityIndexImport.update({
  id: '/community/',
  path: '/community/',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesControlledDialogRoute = FeaturesControlledDialogImport.update({
  id: '/features/controlled-dialog',
  path: '/features/controlled-dialog',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesObjectsRouteRoute = FeaturesObjectsRouteImport.update({
  id: '/features/objects',
  path: '/features/objects',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesFileBrowserRouteRoute = FeaturesFileBrowserRouteImport.update({
  id: '/features/file-browser',
  path: '/features/file-browser',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesAuthRouteRoute = FeaturesAuthRouteImport.update({
  id: '/features/auth',
  path: '/features/auth',
  getParentRoute: () => rootRoute,
} as any)

const CoreShadcnRouteRoute = CoreShadcnRouteImport.update({
  id: '/core/shadcn',
  path: '/core/shadcn',
  getParentRoute: () => rootRoute,
} as any)

const CoreReactTableRouteRoute = CoreReactTableRouteImport.update({
  id: '/core/react-table',
  path: '/core/react-table',
  getParentRoute: () => rootRoute,
} as any)

const CoreReactQueryRouteRoute = CoreReactQueryRouteImport.update({
  id: '/core/react-query',
  path: '/core/react-query',
  getParentRoute: () => rootRoute,
} as any)

const CoreReactFormRouteRoute = CoreReactFormRouteImport.update({
  id: '/core/react-form',
  path: '/core/react-form',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesFileBrowserIndexRoute = FeaturesFileBrowserIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FeaturesFileBrowserRouteRoute,
} as any)

const FeaturesAuthIndexRoute = FeaturesAuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FeaturesAuthRouteRoute,
} as any)

const CoreReactGridLayoutIndexRoute = CoreReactGridLayoutIndexImport.update({
  id: '/core/react-grid-layout/',
  path: '/core/react-grid-layout/',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesObjectsExplorerRoute = FeaturesObjectsExplorerImport.update({
  id: '/explorer',
  path: '/explorer',
  getParentRoute: () => FeaturesObjectsRouteRoute,
} as any)

const CoreShadcnUseReactiveStateRoute = CoreShadcnUseReactiveStateImport.update(
  {
    id: '/use-reactive-state',
    path: '/use-reactive-state',
    getParentRoute: () => CoreShadcnRouteRoute,
  } as any,
)

const CoreShadcnUseDebounceRoute = CoreShadcnUseDebounceImport.update({
  id: '/use-debounce',
  path: '/use-debounce',
  getParentRoute: () => CoreShadcnRouteRoute,
} as any)

const CoreShadcnSelectRoute = CoreShadcnSelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => CoreShadcnRouteRoute,
} as any)

const CoreShadcnProposeClassNameOverrideRoute =
  CoreShadcnProposeClassNameOverrideImport.update({
    id: '/propose-class-name-override',
    path: '/propose-class-name-override',
    getParentRoute: () => CoreShadcnRouteRoute,
  } as any)

const CoreShadcnPopoverRoute = CoreShadcnPopoverImport.update({
  id: '/popover',
  path: '/popover',
  getParentRoute: () => CoreShadcnRouteRoute,
} as any)

const CoreShadcnContextMenuRoute = CoreShadcnContextMenuImport.update({
  id: '/context-menu',
  path: '/context-menu',
  getParentRoute: () => CoreShadcnRouteRoute,
} as any)

const CoreShadcnCheckboxRoute = CoreShadcnCheckboxImport.update({
  id: '/checkbox',
  path: '/checkbox',
  getParentRoute: () => CoreShadcnRouteRoute,
} as any)

const CoreShadcnButtonRoute = CoreShadcnButtonImport.update({
  id: '/button',
  path: '/button',
  getParentRoute: () => CoreShadcnRouteRoute,
} as any)

const CoreReactTableStandardRoute = CoreReactTableStandardImport.update({
  id: '/standard',
  path: '/standard',
  getParentRoute: () => CoreReactTableRouteRoute,
} as any)

const CoreReactTableMergeColumnsRoute = CoreReactTableMergeColumnsImport.update(
  {
    id: '/merge-columns',
    path: '/merge-columns',
    getParentRoute: () => CoreReactTableRouteRoute,
  } as any,
)

const CoreReactTableFullCustomizationRoute =
  CoreReactTableFullCustomizationImport.update({
    id: '/full-customization',
    path: '/full-customization',
    getParentRoute: () => CoreReactTableRouteRoute,
  } as any)

const CoreReactTableExpandRowsControlRoute =
  CoreReactTableExpandRowsControlImport.update({
    id: '/expand-rows-control',
    path: '/expand-rows-control',
    getParentRoute: () => CoreReactTableRouteRoute,
  } as any)

const CoreReactTableExpandRowsCellRoute =
  CoreReactTableExpandRowsCellImport.update({
    id: '/expand-rows-cell',
    path: '/expand-rows-cell',
    getParentRoute: () => CoreReactTableRouteRoute,
  } as any)

const CoreReactTableColumnFiltersRoute =
  CoreReactTableColumnFiltersImport.update({
    id: '/column-filters',
    path: '/column-filters',
    getParentRoute: () => CoreReactTableRouteRoute,
  } as any)

const CoreReactQueryUseQueryRoute = CoreReactQueryUseQueryImport.update({
  id: '/use-query',
  path: '/use-query',
  getParentRoute: () => CoreReactQueryRouteRoute,
} as any)

const CoreReactQueryUseMutationRoute = CoreReactQueryUseMutationImport.update({
  id: '/use-mutation',
  path: '/use-mutation',
  getParentRoute: () => CoreReactQueryRouteRoute,
} as any)

const CoreReactFormWithZoosFormRoute = CoreReactFormWithZoosFormImport.update({
  id: '/with-zoos-form',
  path: '/with-zoos-form',
  getParentRoute: () => CoreReactFormRouteRoute,
} as any)

const CoreReactFormStandardReactFormRoute =
  CoreReactFormStandardReactFormImport.update({
    id: '/standard-react-form',
    path: '/standard-react-form',
    getParentRoute: () => CoreReactFormRouteRoute,
  } as any)

const CoreReactFormSelectRoute = CoreReactFormSelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => CoreReactFormRouteRoute,
} as any)

const CoreReactFormInputDebounceRoute = CoreReactFormInputDebounceImport.update(
  {
    id: '/input-debounce',
    path: '/input-debounce',
    getParentRoute: () => CoreReactFormRouteRoute,
  } as any,
)

const CoreReactFormComboboxCheckboxGroupRoute =
  CoreReactFormComboboxCheckboxGroupImport.update({
    id: '/combobox-checkbox-group',
    path: '/combobox-checkbox-group',
    getParentRoute: () => CoreReactFormRouteRoute,
  } as any)

const CoreReactFormCheckboxWithLabelRoute =
  CoreReactFormCheckboxWithLabelImport.update({
    id: '/checkbox-with-label',
    path: '/checkbox-with-label',
    getParentRoute: () => CoreReactFormRouteRoute,
  } as any)

const CoreReactFormCheckboxGroupRoute = CoreReactFormCheckboxGroupImport.update(
  {
    id: '/checkbox-group',
    path: '/checkbox-group',
    getParentRoute: () => CoreReactFormRouteRoute,
  } as any,
)

const CommunityReactTableColumnDndRoute =
  CommunityReactTableColumnDndImport.update({
    id: '/community/react-table/column-dnd',
    path: '/community/react-table/column-dnd',
    getParentRoute: () => rootRoute,
  } as any)

const CommunityDndKitDragAndDropTabsRoute =
  CommunityDndKitDragAndDropTabsImport.update({
    id: '/community/dnd-kit/drag-and-drop-tabs',
    path: '/community/dnd-kit/drag-and-drop-tabs',
    getParentRoute: () => rootRoute,
  } as any)

const CommunityDndKitDragAndDropSimpleRoute =
  CommunityDndKitDragAndDropSimpleImport.update({
    id: '/community/dnd-kit/drag-and-drop-simple',
    path: '/community/dnd-kit/drag-and-drop-simple',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/get-started': {
      id: '/get-started'
      path: '/get-started'
      fullPath: '/get-started'
      preLoaderRoute: typeof GetStartedImport
      parentRoute: typeof rootRoute
    }
    '/core/react-form': {
      id: '/core/react-form'
      path: '/core/react-form'
      fullPath: '/core/react-form'
      preLoaderRoute: typeof CoreReactFormRouteImport
      parentRoute: typeof rootRoute
    }
    '/core/react-query': {
      id: '/core/react-query'
      path: '/core/react-query'
      fullPath: '/core/react-query'
      preLoaderRoute: typeof CoreReactQueryRouteImport
      parentRoute: typeof rootRoute
    }
    '/core/react-table': {
      id: '/core/react-table'
      path: '/core/react-table'
      fullPath: '/core/react-table'
      preLoaderRoute: typeof CoreReactTableRouteImport
      parentRoute: typeof rootRoute
    }
    '/core/shadcn': {
      id: '/core/shadcn'
      path: '/core/shadcn'
      fullPath: '/core/shadcn'
      preLoaderRoute: typeof CoreShadcnRouteImport
      parentRoute: typeof rootRoute
    }
    '/features/auth': {
      id: '/features/auth'
      path: '/features/auth'
      fullPath: '/features/auth'
      preLoaderRoute: typeof FeaturesAuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/features/file-browser': {
      id: '/features/file-browser'
      path: '/features/file-browser'
      fullPath: '/features/file-browser'
      preLoaderRoute: typeof FeaturesFileBrowserRouteImport
      parentRoute: typeof rootRoute
    }
    '/features/objects': {
      id: '/features/objects'
      path: '/features/objects'
      fullPath: '/features/objects'
      preLoaderRoute: typeof FeaturesObjectsRouteImport
      parentRoute: typeof rootRoute
    }
    '/features/controlled-dialog': {
      id: '/features/controlled-dialog'
      path: '/features/controlled-dialog'
      fullPath: '/features/controlled-dialog'
      preLoaderRoute: typeof FeaturesControlledDialogImport
      parentRoute: typeof rootRoute
    }
    '/community/': {
      id: '/community/'
      path: '/community'
      fullPath: '/community'
      preLoaderRoute: typeof CommunityIndexImport
      parentRoute: typeof rootRoute
    }
    '/community/dnd-kit/drag-and-drop-simple': {
      id: '/community/dnd-kit/drag-and-drop-simple'
      path: '/community/dnd-kit/drag-and-drop-simple'
      fullPath: '/community/dnd-kit/drag-and-drop-simple'
      preLoaderRoute: typeof CommunityDndKitDragAndDropSimpleImport
      parentRoute: typeof rootRoute
    }
    '/community/dnd-kit/drag-and-drop-tabs': {
      id: '/community/dnd-kit/drag-and-drop-tabs'
      path: '/community/dnd-kit/drag-and-drop-tabs'
      fullPath: '/community/dnd-kit/drag-and-drop-tabs'
      preLoaderRoute: typeof CommunityDndKitDragAndDropTabsImport
      parentRoute: typeof rootRoute
    }
    '/community/react-table/column-dnd': {
      id: '/community/react-table/column-dnd'
      path: '/community/react-table/column-dnd'
      fullPath: '/community/react-table/column-dnd'
      preLoaderRoute: typeof CommunityReactTableColumnDndImport
      parentRoute: typeof rootRoute
    }
    '/core/react-form/checkbox-group': {
      id: '/core/react-form/checkbox-group'
      path: '/checkbox-group'
      fullPath: '/core/react-form/checkbox-group'
      preLoaderRoute: typeof CoreReactFormCheckboxGroupImport
      parentRoute: typeof CoreReactFormRouteImport
    }
    '/core/react-form/checkbox-with-label': {
      id: '/core/react-form/checkbox-with-label'
      path: '/checkbox-with-label'
      fullPath: '/core/react-form/checkbox-with-label'
      preLoaderRoute: typeof CoreReactFormCheckboxWithLabelImport
      parentRoute: typeof CoreReactFormRouteImport
    }
    '/core/react-form/combobox-checkbox-group': {
      id: '/core/react-form/combobox-checkbox-group'
      path: '/combobox-checkbox-group'
      fullPath: '/core/react-form/combobox-checkbox-group'
      preLoaderRoute: typeof CoreReactFormComboboxCheckboxGroupImport
      parentRoute: typeof CoreReactFormRouteImport
    }
    '/core/react-form/input-debounce': {
      id: '/core/react-form/input-debounce'
      path: '/input-debounce'
      fullPath: '/core/react-form/input-debounce'
      preLoaderRoute: typeof CoreReactFormInputDebounceImport
      parentRoute: typeof CoreReactFormRouteImport
    }
    '/core/react-form/select': {
      id: '/core/react-form/select'
      path: '/select'
      fullPath: '/core/react-form/select'
      preLoaderRoute: typeof CoreReactFormSelectImport
      parentRoute: typeof CoreReactFormRouteImport
    }
    '/core/react-form/standard-react-form': {
      id: '/core/react-form/standard-react-form'
      path: '/standard-react-form'
      fullPath: '/core/react-form/standard-react-form'
      preLoaderRoute: typeof CoreReactFormStandardReactFormImport
      parentRoute: typeof CoreReactFormRouteImport
    }
    '/core/react-form/with-zoos-form': {
      id: '/core/react-form/with-zoos-form'
      path: '/with-zoos-form'
      fullPath: '/core/react-form/with-zoos-form'
      preLoaderRoute: typeof CoreReactFormWithZoosFormImport
      parentRoute: typeof CoreReactFormRouteImport
    }
    '/core/react-query/use-mutation': {
      id: '/core/react-query/use-mutation'
      path: '/use-mutation'
      fullPath: '/core/react-query/use-mutation'
      preLoaderRoute: typeof CoreReactQueryUseMutationImport
      parentRoute: typeof CoreReactQueryRouteImport
    }
    '/core/react-query/use-query': {
      id: '/core/react-query/use-query'
      path: '/use-query'
      fullPath: '/core/react-query/use-query'
      preLoaderRoute: typeof CoreReactQueryUseQueryImport
      parentRoute: typeof CoreReactQueryRouteImport
    }
    '/core/react-table/column-filters': {
      id: '/core/react-table/column-filters'
      path: '/column-filters'
      fullPath: '/core/react-table/column-filters'
      preLoaderRoute: typeof CoreReactTableColumnFiltersImport
      parentRoute: typeof CoreReactTableRouteImport
    }
    '/core/react-table/expand-rows-cell': {
      id: '/core/react-table/expand-rows-cell'
      path: '/expand-rows-cell'
      fullPath: '/core/react-table/expand-rows-cell'
      preLoaderRoute: typeof CoreReactTableExpandRowsCellImport
      parentRoute: typeof CoreReactTableRouteImport
    }
    '/core/react-table/expand-rows-control': {
      id: '/core/react-table/expand-rows-control'
      path: '/expand-rows-control'
      fullPath: '/core/react-table/expand-rows-control'
      preLoaderRoute: typeof CoreReactTableExpandRowsControlImport
      parentRoute: typeof CoreReactTableRouteImport
    }
    '/core/react-table/full-customization': {
      id: '/core/react-table/full-customization'
      path: '/full-customization'
      fullPath: '/core/react-table/full-customization'
      preLoaderRoute: typeof CoreReactTableFullCustomizationImport
      parentRoute: typeof CoreReactTableRouteImport
    }
    '/core/react-table/merge-columns': {
      id: '/core/react-table/merge-columns'
      path: '/merge-columns'
      fullPath: '/core/react-table/merge-columns'
      preLoaderRoute: typeof CoreReactTableMergeColumnsImport
      parentRoute: typeof CoreReactTableRouteImport
    }
    '/core/react-table/standard': {
      id: '/core/react-table/standard'
      path: '/standard'
      fullPath: '/core/react-table/standard'
      preLoaderRoute: typeof CoreReactTableStandardImport
      parentRoute: typeof CoreReactTableRouteImport
    }
    '/core/shadcn/button': {
      id: '/core/shadcn/button'
      path: '/button'
      fullPath: '/core/shadcn/button'
      preLoaderRoute: typeof CoreShadcnButtonImport
      parentRoute: typeof CoreShadcnRouteImport
    }
    '/core/shadcn/checkbox': {
      id: '/core/shadcn/checkbox'
      path: '/checkbox'
      fullPath: '/core/shadcn/checkbox'
      preLoaderRoute: typeof CoreShadcnCheckboxImport
      parentRoute: typeof CoreShadcnRouteImport
    }
    '/core/shadcn/context-menu': {
      id: '/core/shadcn/context-menu'
      path: '/context-menu'
      fullPath: '/core/shadcn/context-menu'
      preLoaderRoute: typeof CoreShadcnContextMenuImport
      parentRoute: typeof CoreShadcnRouteImport
    }
    '/core/shadcn/popover': {
      id: '/core/shadcn/popover'
      path: '/popover'
      fullPath: '/core/shadcn/popover'
      preLoaderRoute: typeof CoreShadcnPopoverImport
      parentRoute: typeof CoreShadcnRouteImport
    }
    '/core/shadcn/propose-class-name-override': {
      id: '/core/shadcn/propose-class-name-override'
      path: '/propose-class-name-override'
      fullPath: '/core/shadcn/propose-class-name-override'
      preLoaderRoute: typeof CoreShadcnProposeClassNameOverrideImport
      parentRoute: typeof CoreShadcnRouteImport
    }
    '/core/shadcn/select': {
      id: '/core/shadcn/select'
      path: '/select'
      fullPath: '/core/shadcn/select'
      preLoaderRoute: typeof CoreShadcnSelectImport
      parentRoute: typeof CoreShadcnRouteImport
    }
    '/core/shadcn/use-debounce': {
      id: '/core/shadcn/use-debounce'
      path: '/use-debounce'
      fullPath: '/core/shadcn/use-debounce'
      preLoaderRoute: typeof CoreShadcnUseDebounceImport
      parentRoute: typeof CoreShadcnRouteImport
    }
    '/core/shadcn/use-reactive-state': {
      id: '/core/shadcn/use-reactive-state'
      path: '/use-reactive-state'
      fullPath: '/core/shadcn/use-reactive-state'
      preLoaderRoute: typeof CoreShadcnUseReactiveStateImport
      parentRoute: typeof CoreShadcnRouteImport
    }
    '/features/objects/explorer': {
      id: '/features/objects/explorer'
      path: '/explorer'
      fullPath: '/features/objects/explorer'
      preLoaderRoute: typeof FeaturesObjectsExplorerImport
      parentRoute: typeof FeaturesObjectsRouteImport
    }
    '/core/react-grid-layout/': {
      id: '/core/react-grid-layout/'
      path: '/core/react-grid-layout'
      fullPath: '/core/react-grid-layout'
      preLoaderRoute: typeof CoreReactGridLayoutIndexImport
      parentRoute: typeof rootRoute
    }
    '/features/auth/': {
      id: '/features/auth/'
      path: '/'
      fullPath: '/features/auth/'
      preLoaderRoute: typeof FeaturesAuthIndexImport
      parentRoute: typeof FeaturesAuthRouteImport
    }
    '/features/file-browser/': {
      id: '/features/file-browser/'
      path: '/'
      fullPath: '/features/file-browser/'
      preLoaderRoute: typeof FeaturesFileBrowserIndexImport
      parentRoute: typeof FeaturesFileBrowserRouteImport
    }
  }
}

// Create and export the route tree

interface CoreReactFormRouteRouteChildren {
  CoreReactFormCheckboxGroupRoute: typeof CoreReactFormCheckboxGroupRoute
  CoreReactFormCheckboxWithLabelRoute: typeof CoreReactFormCheckboxWithLabelRoute
  CoreReactFormComboboxCheckboxGroupRoute: typeof CoreReactFormComboboxCheckboxGroupRoute
  CoreReactFormInputDebounceRoute: typeof CoreReactFormInputDebounceRoute
  CoreReactFormSelectRoute: typeof CoreReactFormSelectRoute
  CoreReactFormStandardReactFormRoute: typeof CoreReactFormStandardReactFormRoute
  CoreReactFormWithZoosFormRoute: typeof CoreReactFormWithZoosFormRoute
}

const CoreReactFormRouteRouteChildren: CoreReactFormRouteRouteChildren = {
  CoreReactFormCheckboxGroupRoute: CoreReactFormCheckboxGroupRoute,
  CoreReactFormCheckboxWithLabelRoute: CoreReactFormCheckboxWithLabelRoute,
  CoreReactFormComboboxCheckboxGroupRoute:
    CoreReactFormComboboxCheckboxGroupRoute,
  CoreReactFormInputDebounceRoute: CoreReactFormInputDebounceRoute,
  CoreReactFormSelectRoute: CoreReactFormSelectRoute,
  CoreReactFormStandardReactFormRoute: CoreReactFormStandardReactFormRoute,
  CoreReactFormWithZoosFormRoute: CoreReactFormWithZoosFormRoute,
}

const CoreReactFormRouteRouteWithChildren =
  CoreReactFormRouteRoute._addFileChildren(CoreReactFormRouteRouteChildren)

interface CoreReactQueryRouteRouteChildren {
  CoreReactQueryUseMutationRoute: typeof CoreReactQueryUseMutationRoute
  CoreReactQueryUseQueryRoute: typeof CoreReactQueryUseQueryRoute
}

const CoreReactQueryRouteRouteChildren: CoreReactQueryRouteRouteChildren = {
  CoreReactQueryUseMutationRoute: CoreReactQueryUseMutationRoute,
  CoreReactQueryUseQueryRoute: CoreReactQueryUseQueryRoute,
}

const CoreReactQueryRouteRouteWithChildren =
  CoreReactQueryRouteRoute._addFileChildren(CoreReactQueryRouteRouteChildren)

interface CoreReactTableRouteRouteChildren {
  CoreReactTableColumnFiltersRoute: typeof CoreReactTableColumnFiltersRoute
  CoreReactTableExpandRowsCellRoute: typeof CoreReactTableExpandRowsCellRoute
  CoreReactTableExpandRowsControlRoute: typeof CoreReactTableExpandRowsControlRoute
  CoreReactTableFullCustomizationRoute: typeof CoreReactTableFullCustomizationRoute
  CoreReactTableMergeColumnsRoute: typeof CoreReactTableMergeColumnsRoute
  CoreReactTableStandardRoute: typeof CoreReactTableStandardRoute
}

const CoreReactTableRouteRouteChildren: CoreReactTableRouteRouteChildren = {
  CoreReactTableColumnFiltersRoute: CoreReactTableColumnFiltersRoute,
  CoreReactTableExpandRowsCellRoute: CoreReactTableExpandRowsCellRoute,
  CoreReactTableExpandRowsControlRoute: CoreReactTableExpandRowsControlRoute,
  CoreReactTableFullCustomizationRoute: CoreReactTableFullCustomizationRoute,
  CoreReactTableMergeColumnsRoute: CoreReactTableMergeColumnsRoute,
  CoreReactTableStandardRoute: CoreReactTableStandardRoute,
}

const CoreReactTableRouteRouteWithChildren =
  CoreReactTableRouteRoute._addFileChildren(CoreReactTableRouteRouteChildren)

interface CoreShadcnRouteRouteChildren {
  CoreShadcnButtonRoute: typeof CoreShadcnButtonRoute
  CoreShadcnCheckboxRoute: typeof CoreShadcnCheckboxRoute
  CoreShadcnContextMenuRoute: typeof CoreShadcnContextMenuRoute
  CoreShadcnPopoverRoute: typeof CoreShadcnPopoverRoute
  CoreShadcnProposeClassNameOverrideRoute: typeof CoreShadcnProposeClassNameOverrideRoute
  CoreShadcnSelectRoute: typeof CoreShadcnSelectRoute
  CoreShadcnUseDebounceRoute: typeof CoreShadcnUseDebounceRoute
  CoreShadcnUseReactiveStateRoute: typeof CoreShadcnUseReactiveStateRoute
}

const CoreShadcnRouteRouteChildren: CoreShadcnRouteRouteChildren = {
  CoreShadcnButtonRoute: CoreShadcnButtonRoute,
  CoreShadcnCheckboxRoute: CoreShadcnCheckboxRoute,
  CoreShadcnContextMenuRoute: CoreShadcnContextMenuRoute,
  CoreShadcnPopoverRoute: CoreShadcnPopoverRoute,
  CoreShadcnProposeClassNameOverrideRoute:
    CoreShadcnProposeClassNameOverrideRoute,
  CoreShadcnSelectRoute: CoreShadcnSelectRoute,
  CoreShadcnUseDebounceRoute: CoreShadcnUseDebounceRoute,
  CoreShadcnUseReactiveStateRoute: CoreShadcnUseReactiveStateRoute,
}

const CoreShadcnRouteRouteWithChildren = CoreShadcnRouteRoute._addFileChildren(
  CoreShadcnRouteRouteChildren,
)

interface FeaturesAuthRouteRouteChildren {
  FeaturesAuthIndexRoute: typeof FeaturesAuthIndexRoute
}

const FeaturesAuthRouteRouteChildren: FeaturesAuthRouteRouteChildren = {
  FeaturesAuthIndexRoute: FeaturesAuthIndexRoute,
}

const FeaturesAuthRouteRouteWithChildren =
  FeaturesAuthRouteRoute._addFileChildren(FeaturesAuthRouteRouteChildren)

interface FeaturesFileBrowserRouteRouteChildren {
  FeaturesFileBrowserIndexRoute: typeof FeaturesFileBrowserIndexRoute
}

const FeaturesFileBrowserRouteRouteChildren: FeaturesFileBrowserRouteRouteChildren =
  {
    FeaturesFileBrowserIndexRoute: FeaturesFileBrowserIndexRoute,
  }

const FeaturesFileBrowserRouteRouteWithChildren =
  FeaturesFileBrowserRouteRoute._addFileChildren(
    FeaturesFileBrowserRouteRouteChildren,
  )

interface FeaturesObjectsRouteRouteChildren {
  FeaturesObjectsExplorerRoute: typeof FeaturesObjectsExplorerRoute
}

const FeaturesObjectsRouteRouteChildren: FeaturesObjectsRouteRouteChildren = {
  FeaturesObjectsExplorerRoute: FeaturesObjectsExplorerRoute,
}

const FeaturesObjectsRouteRouteWithChildren =
  FeaturesObjectsRouteRoute._addFileChildren(FeaturesObjectsRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/get-started': typeof GetStartedRoute
  '/core/react-form': typeof CoreReactFormRouteRouteWithChildren
  '/core/react-query': typeof CoreReactQueryRouteRouteWithChildren
  '/core/react-table': typeof CoreReactTableRouteRouteWithChildren
  '/core/shadcn': typeof CoreShadcnRouteRouteWithChildren
  '/features/auth': typeof FeaturesAuthRouteRouteWithChildren
  '/features/file-browser': typeof FeaturesFileBrowserRouteRouteWithChildren
  '/features/objects': typeof FeaturesObjectsRouteRouteWithChildren
  '/features/controlled-dialog': typeof FeaturesControlledDialogRoute
  '/community': typeof CommunityIndexRoute
  '/community/dnd-kit/drag-and-drop-simple': typeof CommunityDndKitDragAndDropSimpleRoute
  '/community/dnd-kit/drag-and-drop-tabs': typeof CommunityDndKitDragAndDropTabsRoute
  '/community/react-table/column-dnd': typeof CommunityReactTableColumnDndRoute
  '/core/react-form/checkbox-group': typeof CoreReactFormCheckboxGroupRoute
  '/core/react-form/checkbox-with-label': typeof CoreReactFormCheckboxWithLabelRoute
  '/core/react-form/combobox-checkbox-group': typeof CoreReactFormComboboxCheckboxGroupRoute
  '/core/react-form/input-debounce': typeof CoreReactFormInputDebounceRoute
  '/core/react-form/select': typeof CoreReactFormSelectRoute
  '/core/react-form/standard-react-form': typeof CoreReactFormStandardReactFormRoute
  '/core/react-form/with-zoos-form': typeof CoreReactFormWithZoosFormRoute
  '/core/react-query/use-mutation': typeof CoreReactQueryUseMutationRoute
  '/core/react-query/use-query': typeof CoreReactQueryUseQueryRoute
  '/core/react-table/column-filters': typeof CoreReactTableColumnFiltersRoute
  '/core/react-table/expand-rows-cell': typeof CoreReactTableExpandRowsCellRoute
  '/core/react-table/expand-rows-control': typeof CoreReactTableExpandRowsControlRoute
  '/core/react-table/full-customization': typeof CoreReactTableFullCustomizationRoute
  '/core/react-table/merge-columns': typeof CoreReactTableMergeColumnsRoute
  '/core/react-table/standard': typeof CoreReactTableStandardRoute
  '/core/shadcn/button': typeof CoreShadcnButtonRoute
  '/core/shadcn/checkbox': typeof CoreShadcnCheckboxRoute
  '/core/shadcn/context-menu': typeof CoreShadcnContextMenuRoute
  '/core/shadcn/popover': typeof CoreShadcnPopoverRoute
  '/core/shadcn/propose-class-name-override': typeof CoreShadcnProposeClassNameOverrideRoute
  '/core/shadcn/select': typeof CoreShadcnSelectRoute
  '/core/shadcn/use-debounce': typeof CoreShadcnUseDebounceRoute
  '/core/shadcn/use-reactive-state': typeof CoreShadcnUseReactiveStateRoute
  '/features/objects/explorer': typeof FeaturesObjectsExplorerRoute
  '/core/react-grid-layout': typeof CoreReactGridLayoutIndexRoute
  '/features/auth/': typeof FeaturesAuthIndexRoute
  '/features/file-browser/': typeof FeaturesFileBrowserIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/get-started': typeof GetStartedRoute
  '/core/react-form': typeof CoreReactFormRouteRouteWithChildren
  '/core/react-query': typeof CoreReactQueryRouteRouteWithChildren
  '/core/react-table': typeof CoreReactTableRouteRouteWithChildren
  '/core/shadcn': typeof CoreShadcnRouteRouteWithChildren
  '/features/objects': typeof FeaturesObjectsRouteRouteWithChildren
  '/features/controlled-dialog': typeof FeaturesControlledDialogRoute
  '/community': typeof CommunityIndexRoute
  '/community/dnd-kit/drag-and-drop-simple': typeof CommunityDndKitDragAndDropSimpleRoute
  '/community/dnd-kit/drag-and-drop-tabs': typeof CommunityDndKitDragAndDropTabsRoute
  '/community/react-table/column-dnd': typeof CommunityReactTableColumnDndRoute
  '/core/react-form/checkbox-group': typeof CoreReactFormCheckboxGroupRoute
  '/core/react-form/checkbox-with-label': typeof CoreReactFormCheckboxWithLabelRoute
  '/core/react-form/combobox-checkbox-group': typeof CoreReactFormComboboxCheckboxGroupRoute
  '/core/react-form/input-debounce': typeof CoreReactFormInputDebounceRoute
  '/core/react-form/select': typeof CoreReactFormSelectRoute
  '/core/react-form/standard-react-form': typeof CoreReactFormStandardReactFormRoute
  '/core/react-form/with-zoos-form': typeof CoreReactFormWithZoosFormRoute
  '/core/react-query/use-mutation': typeof CoreReactQueryUseMutationRoute
  '/core/react-query/use-query': typeof CoreReactQueryUseQueryRoute
  '/core/react-table/column-filters': typeof CoreReactTableColumnFiltersRoute
  '/core/react-table/expand-rows-cell': typeof CoreReactTableExpandRowsCellRoute
  '/core/react-table/expand-rows-control': typeof CoreReactTableExpandRowsControlRoute
  '/core/react-table/full-customization': typeof CoreReactTableFullCustomizationRoute
  '/core/react-table/merge-columns': typeof CoreReactTableMergeColumnsRoute
  '/core/react-table/standard': typeof CoreReactTableStandardRoute
  '/core/shadcn/button': typeof CoreShadcnButtonRoute
  '/core/shadcn/checkbox': typeof CoreShadcnCheckboxRoute
  '/core/shadcn/context-menu': typeof CoreShadcnContextMenuRoute
  '/core/shadcn/popover': typeof CoreShadcnPopoverRoute
  '/core/shadcn/propose-class-name-override': typeof CoreShadcnProposeClassNameOverrideRoute
  '/core/shadcn/select': typeof CoreShadcnSelectRoute
  '/core/shadcn/use-debounce': typeof CoreShadcnUseDebounceRoute
  '/core/shadcn/use-reactive-state': typeof CoreShadcnUseReactiveStateRoute
  '/features/objects/explorer': typeof FeaturesObjectsExplorerRoute
  '/core/react-grid-layout': typeof CoreReactGridLayoutIndexRoute
  '/features/auth': typeof FeaturesAuthIndexRoute
  '/features/file-browser': typeof FeaturesFileBrowserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/get-started': typeof GetStartedRoute
  '/core/react-form': typeof CoreReactFormRouteRouteWithChildren
  '/core/react-query': typeof CoreReactQueryRouteRouteWithChildren
  '/core/react-table': typeof CoreReactTableRouteRouteWithChildren
  '/core/shadcn': typeof CoreShadcnRouteRouteWithChildren
  '/features/auth': typeof FeaturesAuthRouteRouteWithChildren
  '/features/file-browser': typeof FeaturesFileBrowserRouteRouteWithChildren
  '/features/objects': typeof FeaturesObjectsRouteRouteWithChildren
  '/features/controlled-dialog': typeof FeaturesControlledDialogRoute
  '/community/': typeof CommunityIndexRoute
  '/community/dnd-kit/drag-and-drop-simple': typeof CommunityDndKitDragAndDropSimpleRoute
  '/community/dnd-kit/drag-and-drop-tabs': typeof CommunityDndKitDragAndDropTabsRoute
  '/community/react-table/column-dnd': typeof CommunityReactTableColumnDndRoute
  '/core/react-form/checkbox-group': typeof CoreReactFormCheckboxGroupRoute
  '/core/react-form/checkbox-with-label': typeof CoreReactFormCheckboxWithLabelRoute
  '/core/react-form/combobox-checkbox-group': typeof CoreReactFormComboboxCheckboxGroupRoute
  '/core/react-form/input-debounce': typeof CoreReactFormInputDebounceRoute
  '/core/react-form/select': typeof CoreReactFormSelectRoute
  '/core/react-form/standard-react-form': typeof CoreReactFormStandardReactFormRoute
  '/core/react-form/with-zoos-form': typeof CoreReactFormWithZoosFormRoute
  '/core/react-query/use-mutation': typeof CoreReactQueryUseMutationRoute
  '/core/react-query/use-query': typeof CoreReactQueryUseQueryRoute
  '/core/react-table/column-filters': typeof CoreReactTableColumnFiltersRoute
  '/core/react-table/expand-rows-cell': typeof CoreReactTableExpandRowsCellRoute
  '/core/react-table/expand-rows-control': typeof CoreReactTableExpandRowsControlRoute
  '/core/react-table/full-customization': typeof CoreReactTableFullCustomizationRoute
  '/core/react-table/merge-columns': typeof CoreReactTableMergeColumnsRoute
  '/core/react-table/standard': typeof CoreReactTableStandardRoute
  '/core/shadcn/button': typeof CoreShadcnButtonRoute
  '/core/shadcn/checkbox': typeof CoreShadcnCheckboxRoute
  '/core/shadcn/context-menu': typeof CoreShadcnContextMenuRoute
  '/core/shadcn/popover': typeof CoreShadcnPopoverRoute
  '/core/shadcn/propose-class-name-override': typeof CoreShadcnProposeClassNameOverrideRoute
  '/core/shadcn/select': typeof CoreShadcnSelectRoute
  '/core/shadcn/use-debounce': typeof CoreShadcnUseDebounceRoute
  '/core/shadcn/use-reactive-state': typeof CoreShadcnUseReactiveStateRoute
  '/features/objects/explorer': typeof FeaturesObjectsExplorerRoute
  '/core/react-grid-layout/': typeof CoreReactGridLayoutIndexRoute
  '/features/auth/': typeof FeaturesAuthIndexRoute
  '/features/file-browser/': typeof FeaturesFileBrowserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/get-started'
    | '/core/react-form'
    | '/core/react-query'
    | '/core/react-table'
    | '/core/shadcn'
    | '/features/auth'
    | '/features/file-browser'
    | '/features/objects'
    | '/features/controlled-dialog'
    | '/community'
    | '/community/dnd-kit/drag-and-drop-simple'
    | '/community/dnd-kit/drag-and-drop-tabs'
    | '/community/react-table/column-dnd'
    | '/core/react-form/checkbox-group'
    | '/core/react-form/checkbox-with-label'
    | '/core/react-form/combobox-checkbox-group'
    | '/core/react-form/input-debounce'
    | '/core/react-form/select'
    | '/core/react-form/standard-react-form'
    | '/core/react-form/with-zoos-form'
    | '/core/react-query/use-mutation'
    | '/core/react-query/use-query'
    | '/core/react-table/column-filters'
    | '/core/react-table/expand-rows-cell'
    | '/core/react-table/expand-rows-control'
    | '/core/react-table/full-customization'
    | '/core/react-table/merge-columns'
    | '/core/react-table/standard'
    | '/core/shadcn/button'
    | '/core/shadcn/checkbox'
    | '/core/shadcn/context-menu'
    | '/core/shadcn/popover'
    | '/core/shadcn/propose-class-name-override'
    | '/core/shadcn/select'
    | '/core/shadcn/use-debounce'
    | '/core/shadcn/use-reactive-state'
    | '/features/objects/explorer'
    | '/core/react-grid-layout'
    | '/features/auth/'
    | '/features/file-browser/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/get-started'
    | '/core/react-form'
    | '/core/react-query'
    | '/core/react-table'
    | '/core/shadcn'
    | '/features/objects'
    | '/features/controlled-dialog'
    | '/community'
    | '/community/dnd-kit/drag-and-drop-simple'
    | '/community/dnd-kit/drag-and-drop-tabs'
    | '/community/react-table/column-dnd'
    | '/core/react-form/checkbox-group'
    | '/core/react-form/checkbox-with-label'
    | '/core/react-form/combobox-checkbox-group'
    | '/core/react-form/input-debounce'
    | '/core/react-form/select'
    | '/core/react-form/standard-react-form'
    | '/core/react-form/with-zoos-form'
    | '/core/react-query/use-mutation'
    | '/core/react-query/use-query'
    | '/core/react-table/column-filters'
    | '/core/react-table/expand-rows-cell'
    | '/core/react-table/expand-rows-control'
    | '/core/react-table/full-customization'
    | '/core/react-table/merge-columns'
    | '/core/react-table/standard'
    | '/core/shadcn/button'
    | '/core/shadcn/checkbox'
    | '/core/shadcn/context-menu'
    | '/core/shadcn/popover'
    | '/core/shadcn/propose-class-name-override'
    | '/core/shadcn/select'
    | '/core/shadcn/use-debounce'
    | '/core/shadcn/use-reactive-state'
    | '/features/objects/explorer'
    | '/core/react-grid-layout'
    | '/features/auth'
    | '/features/file-browser'
  id:
    | '__root__'
    | '/'
    | '/get-started'
    | '/core/react-form'
    | '/core/react-query'
    | '/core/react-table'
    | '/core/shadcn'
    | '/features/auth'
    | '/features/file-browser'
    | '/features/objects'
    | '/features/controlled-dialog'
    | '/community/'
    | '/community/dnd-kit/drag-and-drop-simple'
    | '/community/dnd-kit/drag-and-drop-tabs'
    | '/community/react-table/column-dnd'
    | '/core/react-form/checkbox-group'
    | '/core/react-form/checkbox-with-label'
    | '/core/react-form/combobox-checkbox-group'
    | '/core/react-form/input-debounce'
    | '/core/react-form/select'
    | '/core/react-form/standard-react-form'
    | '/core/react-form/with-zoos-form'
    | '/core/react-query/use-mutation'
    | '/core/react-query/use-query'
    | '/core/react-table/column-filters'
    | '/core/react-table/expand-rows-cell'
    | '/core/react-table/expand-rows-control'
    | '/core/react-table/full-customization'
    | '/core/react-table/merge-columns'
    | '/core/react-table/standard'
    | '/core/shadcn/button'
    | '/core/shadcn/checkbox'
    | '/core/shadcn/context-menu'
    | '/core/shadcn/popover'
    | '/core/shadcn/propose-class-name-override'
    | '/core/shadcn/select'
    | '/core/shadcn/use-debounce'
    | '/core/shadcn/use-reactive-state'
    | '/features/objects/explorer'
    | '/core/react-grid-layout/'
    | '/features/auth/'
    | '/features/file-browser/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GetStartedRoute: typeof GetStartedRoute
  CoreReactFormRouteRoute: typeof CoreReactFormRouteRouteWithChildren
  CoreReactQueryRouteRoute: typeof CoreReactQueryRouteRouteWithChildren
  CoreReactTableRouteRoute: typeof CoreReactTableRouteRouteWithChildren
  CoreShadcnRouteRoute: typeof CoreShadcnRouteRouteWithChildren
  FeaturesAuthRouteRoute: typeof FeaturesAuthRouteRouteWithChildren
  FeaturesFileBrowserRouteRoute: typeof FeaturesFileBrowserRouteRouteWithChildren
  FeaturesObjectsRouteRoute: typeof FeaturesObjectsRouteRouteWithChildren
  FeaturesControlledDialogRoute: typeof FeaturesControlledDialogRoute
  CommunityIndexRoute: typeof CommunityIndexRoute
  CommunityDndKitDragAndDropSimpleRoute: typeof CommunityDndKitDragAndDropSimpleRoute
  CommunityDndKitDragAndDropTabsRoute: typeof CommunityDndKitDragAndDropTabsRoute
  CommunityReactTableColumnDndRoute: typeof CommunityReactTableColumnDndRoute
  CoreReactGridLayoutIndexRoute: typeof CoreReactGridLayoutIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GetStartedRoute: GetStartedRoute,
  CoreReactFormRouteRoute: CoreReactFormRouteRouteWithChildren,
  CoreReactQueryRouteRoute: CoreReactQueryRouteRouteWithChildren,
  CoreReactTableRouteRoute: CoreReactTableRouteRouteWithChildren,
  CoreShadcnRouteRoute: CoreShadcnRouteRouteWithChildren,
  FeaturesAuthRouteRoute: FeaturesAuthRouteRouteWithChildren,
  FeaturesFileBrowserRouteRoute: FeaturesFileBrowserRouteRouteWithChildren,
  FeaturesObjectsRouteRoute: FeaturesObjectsRouteRouteWithChildren,
  FeaturesControlledDialogRoute: FeaturesControlledDialogRoute,
  CommunityIndexRoute: CommunityIndexRoute,
  CommunityDndKitDragAndDropSimpleRoute: CommunityDndKitDragAndDropSimpleRoute,
  CommunityDndKitDragAndDropTabsRoute: CommunityDndKitDragAndDropTabsRoute,
  CommunityReactTableColumnDndRoute: CommunityReactTableColumnDndRoute,
  CoreReactGridLayoutIndexRoute: CoreReactGridLayoutIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/get-started",
        "/core/react-form",
        "/core/react-query",
        "/core/react-table",
        "/core/shadcn",
        "/features/auth",
        "/features/file-browser",
        "/features/objects",
        "/features/controlled-dialog",
        "/community/",
        "/community/dnd-kit/drag-and-drop-simple",
        "/community/dnd-kit/drag-and-drop-tabs",
        "/community/react-table/column-dnd",
        "/core/react-grid-layout/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/get-started": {
      "filePath": "get-started.tsx"
    },
    "/core/react-form": {
      "filePath": "core/react-form/route.tsx",
      "children": [
        "/core/react-form/checkbox-group",
        "/core/react-form/checkbox-with-label",
        "/core/react-form/combobox-checkbox-group",
        "/core/react-form/input-debounce",
        "/core/react-form/select",
        "/core/react-form/standard-react-form",
        "/core/react-form/with-zoos-form"
      ]
    },
    "/core/react-query": {
      "filePath": "core/react-query/route.tsx",
      "children": [
        "/core/react-query/use-mutation",
        "/core/react-query/use-query"
      ]
    },
    "/core/react-table": {
      "filePath": "core/react-table/route.tsx",
      "children": [
        "/core/react-table/column-filters",
        "/core/react-table/expand-rows-cell",
        "/core/react-table/expand-rows-control",
        "/core/react-table/full-customization",
        "/core/react-table/merge-columns",
        "/core/react-table/standard"
      ]
    },
    "/core/shadcn": {
      "filePath": "core/shadcn/route.tsx",
      "children": [
        "/core/shadcn/button",
        "/core/shadcn/checkbox",
        "/core/shadcn/context-menu",
        "/core/shadcn/popover",
        "/core/shadcn/propose-class-name-override",
        "/core/shadcn/select",
        "/core/shadcn/use-debounce",
        "/core/shadcn/use-reactive-state"
      ]
    },
    "/features/auth": {
      "filePath": "features/auth/route.tsx",
      "children": [
        "/features/auth/"
      ]
    },
    "/features/file-browser": {
      "filePath": "features/file-browser/route.tsx",
      "children": [
        "/features/file-browser/"
      ]
    },
    "/features/objects": {
      "filePath": "features/objects/route.tsx",
      "children": [
        "/features/objects/explorer"
      ]
    },
    "/features/controlled-dialog": {
      "filePath": "features/controlled-dialog.tsx"
    },
    "/community/": {
      "filePath": "community/index.tsx"
    },
    "/community/dnd-kit/drag-and-drop-simple": {
      "filePath": "community/dnd-kit/drag-and-drop-simple.tsx"
    },
    "/community/dnd-kit/drag-and-drop-tabs": {
      "filePath": "community/dnd-kit/drag-and-drop-tabs.tsx"
    },
    "/community/react-table/column-dnd": {
      "filePath": "community/react-table/column-dnd.tsx"
    },
    "/core/react-form/checkbox-group": {
      "filePath": "core/react-form/checkbox-group.tsx",
      "parent": "/core/react-form"
    },
    "/core/react-form/checkbox-with-label": {
      "filePath": "core/react-form/checkbox-with-label.tsx",
      "parent": "/core/react-form"
    },
    "/core/react-form/combobox-checkbox-group": {
      "filePath": "core/react-form/combobox-checkbox-group.tsx",
      "parent": "/core/react-form"
    },
    "/core/react-form/input-debounce": {
      "filePath": "core/react-form/input-debounce.tsx",
      "parent": "/core/react-form"
    },
    "/core/react-form/select": {
      "filePath": "core/react-form/select.tsx",
      "parent": "/core/react-form"
    },
    "/core/react-form/standard-react-form": {
      "filePath": "core/react-form/standard-react-form.tsx",
      "parent": "/core/react-form"
    },
    "/core/react-form/with-zoos-form": {
      "filePath": "core/react-form/with-zoos-form.tsx",
      "parent": "/core/react-form"
    },
    "/core/react-query/use-mutation": {
      "filePath": "core/react-query/use-mutation.tsx",
      "parent": "/core/react-query"
    },
    "/core/react-query/use-query": {
      "filePath": "core/react-query/use-query.tsx",
      "parent": "/core/react-query"
    },
    "/core/react-table/column-filters": {
      "filePath": "core/react-table/column-filters.tsx",
      "parent": "/core/react-table"
    },
    "/core/react-table/expand-rows-cell": {
      "filePath": "core/react-table/expand-rows-cell.tsx",
      "parent": "/core/react-table"
    },
    "/core/react-table/expand-rows-control": {
      "filePath": "core/react-table/expand-rows-control.tsx",
      "parent": "/core/react-table"
    },
    "/core/react-table/full-customization": {
      "filePath": "core/react-table/full-customization.tsx",
      "parent": "/core/react-table"
    },
    "/core/react-table/merge-columns": {
      "filePath": "core/react-table/merge-columns.tsx",
      "parent": "/core/react-table"
    },
    "/core/react-table/standard": {
      "filePath": "core/react-table/standard.tsx",
      "parent": "/core/react-table"
    },
    "/core/shadcn/button": {
      "filePath": "core/shadcn/button.tsx",
      "parent": "/core/shadcn"
    },
    "/core/shadcn/checkbox": {
      "filePath": "core/shadcn/checkbox.tsx",
      "parent": "/core/shadcn"
    },
    "/core/shadcn/context-menu": {
      "filePath": "core/shadcn/context-menu.tsx",
      "parent": "/core/shadcn"
    },
    "/core/shadcn/popover": {
      "filePath": "core/shadcn/popover.tsx",
      "parent": "/core/shadcn"
    },
    "/core/shadcn/propose-class-name-override": {
      "filePath": "core/shadcn/propose-class-name-override.tsx",
      "parent": "/core/shadcn"
    },
    "/core/shadcn/select": {
      "filePath": "core/shadcn/select.tsx",
      "parent": "/core/shadcn"
    },
    "/core/shadcn/use-debounce": {
      "filePath": "core/shadcn/use-debounce.tsx",
      "parent": "/core/shadcn"
    },
    "/core/shadcn/use-reactive-state": {
      "filePath": "core/shadcn/use-reactive-state.tsx",
      "parent": "/core/shadcn"
    },
    "/features/objects/explorer": {
      "filePath": "features/objects/explorer.tsx",
      "parent": "/features/objects"
    },
    "/core/react-grid-layout/": {
      "filePath": "core/react-grid-layout/index.tsx"
    },
    "/features/auth/": {
      "filePath": "features/auth/index.tsx",
      "parent": "/features/auth"
    },
    "/features/file-browser/": {
      "filePath": "features/file-browser/index.tsx",
      "parent": "/features/file-browser"
    }
  }
}
ROUTE_MANIFEST_END */
