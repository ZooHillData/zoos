/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LibrariesShadcnRouteImport } from './routes/libraries/shadcn/route'
import { Route as LibrariesReactTableRouteImport } from './routes/libraries/react-table/route'
import { Route as LibrariesReactQueryRouteImport } from './routes/libraries/react-query/route'
import { Route as LibrariesReactFormRouteImport } from './routes/libraries/react-form/route'
import { Route as FeaturesFileBrowserRouteImport } from './routes/features/file-browser/route'
import { Route as FeaturesFileBrowserIndexImport } from './routes/features/file-browser/index'
import { Route as FeaturesAuthIndexImport } from './routes/features/auth/index'
import { Route as LibrariesShadcnUseReactiveStateImport } from './routes/libraries/shadcn/use-reactive-state'
import { Route as LibrariesShadcnUseDebounceImport } from './routes/libraries/shadcn/use-debounce'
import { Route as LibrariesShadcnSelectImport } from './routes/libraries/shadcn/select'
import { Route as LibrariesShadcnProposeClassNameOverrideImport } from './routes/libraries/shadcn/propose-class-name-override'
import { Route as LibrariesShadcnPopoverImport } from './routes/libraries/shadcn/popover'
import { Route as LibrariesShadcnContextMenuImport } from './routes/libraries/shadcn/context-menu'
import { Route as LibrariesShadcnCheckboxImport } from './routes/libraries/shadcn/checkbox'
import { Route as LibrariesShadcnButtonImport } from './routes/libraries/shadcn/button'
import { Route as LibrariesReactTableStandardImport } from './routes/libraries/react-table/standard'
import { Route as LibrariesReactTableMergeColumnsImport } from './routes/libraries/react-table/merge-columns'
import { Route as LibrariesReactTableFullCustomizationImport } from './routes/libraries/react-table/full-customization'
import { Route as LibrariesReactTableExpandRowsControlImport } from './routes/libraries/react-table/expand-rows-control'
import { Route as LibrariesReactTableExpandRowsCellImport } from './routes/libraries/react-table/expand-rows-cell'
import { Route as LibrariesReactTableCustomColumnsImport } from './routes/libraries/react-table/custom-columns'
import { Route as LibrariesReactQueryUseQueryImport } from './routes/libraries/react-query/use-query'
import { Route as LibrariesReactQueryUseMutationImport } from './routes/libraries/react-query/use-mutation'
import { Route as LibrariesReactFormWithZoosFormImport } from './routes/libraries/react-form/with-zoos-form'
import { Route as LibrariesReactFormStandardReactFormImport } from './routes/libraries/react-form/standard-react-form'
import { Route as LibrariesReactFormSelectImport } from './routes/libraries/react-form/select'
import { Route as LibrariesReactFormInputDebounceImport } from './routes/libraries/react-form/input-debounce'
import { Route as LibrariesReactFormComboboxCheckboxGroupImport } from './routes/libraries/react-form/combobox-checkbox-group'
import { Route as LibrariesReactFormCheckboxWithLabelImport } from './routes/libraries/react-form/checkbox-with-label'
import { Route as LibrariesReactFormCheckboxGroupImport } from './routes/libraries/react-form/checkbox-group'
import { Route as FeaturesAppAuthRouteImport } from './routes/features/app/auth/route'
import { Route as FeaturesAppAuthSignupImport } from './routes/features/app/auth/signup'
import { Route as FeaturesAppAuthLoginImport } from './routes/features/app/auth/login'
import { Route as FeaturesAppAuthForgotPasswordImport } from './routes/features/app/auth/forgot-password'
import { Route as FeaturesAppAuthConfirmOtpImport } from './routes/features/app/auth/confirm-otp'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LibrariesShadcnRouteRoute = LibrariesShadcnRouteImport.update({
  id: '/libraries/shadcn',
  path: '/libraries/shadcn',
  getParentRoute: () => rootRoute,
} as any)

const LibrariesReactTableRouteRoute = LibrariesReactTableRouteImport.update({
  id: '/libraries/react-table',
  path: '/libraries/react-table',
  getParentRoute: () => rootRoute,
} as any)

const LibrariesReactQueryRouteRoute = LibrariesReactQueryRouteImport.update({
  id: '/libraries/react-query',
  path: '/libraries/react-query',
  getParentRoute: () => rootRoute,
} as any)

const LibrariesReactFormRouteRoute = LibrariesReactFormRouteImport.update({
  id: '/libraries/react-form',
  path: '/libraries/react-form',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesFileBrowserRouteRoute = FeaturesFileBrowserRouteImport.update({
  id: '/features/file-browser',
  path: '/features/file-browser',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesFileBrowserIndexRoute = FeaturesFileBrowserIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FeaturesFileBrowserRouteRoute,
} as any)

const FeaturesAuthIndexRoute = FeaturesAuthIndexImport.update({
  id: '/features/auth/',
  path: '/features/auth/',
  getParentRoute: () => rootRoute,
} as any)

const LibrariesShadcnUseReactiveStateRoute =
  LibrariesShadcnUseReactiveStateImport.update({
    id: '/use-reactive-state',
    path: '/use-reactive-state',
    getParentRoute: () => LibrariesShadcnRouteRoute,
  } as any)

const LibrariesShadcnUseDebounceRoute = LibrariesShadcnUseDebounceImport.update(
  {
    id: '/use-debounce',
    path: '/use-debounce',
    getParentRoute: () => LibrariesShadcnRouteRoute,
  } as any,
)

const LibrariesShadcnSelectRoute = LibrariesShadcnSelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => LibrariesShadcnRouteRoute,
} as any)

const LibrariesShadcnProposeClassNameOverrideRoute =
  LibrariesShadcnProposeClassNameOverrideImport.update({
    id: '/propose-class-name-override',
    path: '/propose-class-name-override',
    getParentRoute: () => LibrariesShadcnRouteRoute,
  } as any)

const LibrariesShadcnPopoverRoute = LibrariesShadcnPopoverImport.update({
  id: '/popover',
  path: '/popover',
  getParentRoute: () => LibrariesShadcnRouteRoute,
} as any)

const LibrariesShadcnContextMenuRoute = LibrariesShadcnContextMenuImport.update(
  {
    id: '/context-menu',
    path: '/context-menu',
    getParentRoute: () => LibrariesShadcnRouteRoute,
  } as any,
)

const LibrariesShadcnCheckboxRoute = LibrariesShadcnCheckboxImport.update({
  id: '/checkbox',
  path: '/checkbox',
  getParentRoute: () => LibrariesShadcnRouteRoute,
} as any)

const LibrariesShadcnButtonRoute = LibrariesShadcnButtonImport.update({
  id: '/button',
  path: '/button',
  getParentRoute: () => LibrariesShadcnRouteRoute,
} as any)

const LibrariesReactTableStandardRoute =
  LibrariesReactTableStandardImport.update({
    id: '/standard',
    path: '/standard',
    getParentRoute: () => LibrariesReactTableRouteRoute,
  } as any)

const LibrariesReactTableMergeColumnsRoute =
  LibrariesReactTableMergeColumnsImport.update({
    id: '/merge-columns',
    path: '/merge-columns',
    getParentRoute: () => LibrariesReactTableRouteRoute,
  } as any)

const LibrariesReactTableFullCustomizationRoute =
  LibrariesReactTableFullCustomizationImport.update({
    id: '/full-customization',
    path: '/full-customization',
    getParentRoute: () => LibrariesReactTableRouteRoute,
  } as any)

const LibrariesReactTableExpandRowsControlRoute =
  LibrariesReactTableExpandRowsControlImport.update({
    id: '/expand-rows-control',
    path: '/expand-rows-control',
    getParentRoute: () => LibrariesReactTableRouteRoute,
  } as any)

const LibrariesReactTableExpandRowsCellRoute =
  LibrariesReactTableExpandRowsCellImport.update({
    id: '/expand-rows-cell',
    path: '/expand-rows-cell',
    getParentRoute: () => LibrariesReactTableRouteRoute,
  } as any)

const LibrariesReactTableCustomColumnsRoute =
  LibrariesReactTableCustomColumnsImport.update({
    id: '/custom-columns',
    path: '/custom-columns',
    getParentRoute: () => LibrariesReactTableRouteRoute,
  } as any)

const LibrariesReactQueryUseQueryRoute =
  LibrariesReactQueryUseQueryImport.update({
    id: '/use-query',
    path: '/use-query',
    getParentRoute: () => LibrariesReactQueryRouteRoute,
  } as any)

const LibrariesReactQueryUseMutationRoute =
  LibrariesReactQueryUseMutationImport.update({
    id: '/use-mutation',
    path: '/use-mutation',
    getParentRoute: () => LibrariesReactQueryRouteRoute,
  } as any)

const LibrariesReactFormWithZoosFormRoute =
  LibrariesReactFormWithZoosFormImport.update({
    id: '/with-zoos-form',
    path: '/with-zoos-form',
    getParentRoute: () => LibrariesReactFormRouteRoute,
  } as any)

const LibrariesReactFormStandardReactFormRoute =
  LibrariesReactFormStandardReactFormImport.update({
    id: '/standard-react-form',
    path: '/standard-react-form',
    getParentRoute: () => LibrariesReactFormRouteRoute,
  } as any)

const LibrariesReactFormSelectRoute = LibrariesReactFormSelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => LibrariesReactFormRouteRoute,
} as any)

const LibrariesReactFormInputDebounceRoute =
  LibrariesReactFormInputDebounceImport.update({
    id: '/input-debounce',
    path: '/input-debounce',
    getParentRoute: () => LibrariesReactFormRouteRoute,
  } as any)

const LibrariesReactFormComboboxCheckboxGroupRoute =
  LibrariesReactFormComboboxCheckboxGroupImport.update({
    id: '/combobox-checkbox-group',
    path: '/combobox-checkbox-group',
    getParentRoute: () => LibrariesReactFormRouteRoute,
  } as any)

const LibrariesReactFormCheckboxWithLabelRoute =
  LibrariesReactFormCheckboxWithLabelImport.update({
    id: '/checkbox-with-label',
    path: '/checkbox-with-label',
    getParentRoute: () => LibrariesReactFormRouteRoute,
  } as any)

const LibrariesReactFormCheckboxGroupRoute =
  LibrariesReactFormCheckboxGroupImport.update({
    id: '/checkbox-group',
    path: '/checkbox-group',
    getParentRoute: () => LibrariesReactFormRouteRoute,
  } as any)

const FeaturesAppAuthRouteRoute = FeaturesAppAuthRouteImport.update({
  id: '/features/app/auth',
  path: '/features/app/auth',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesAppAuthSignupRoute = FeaturesAppAuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => FeaturesAppAuthRouteRoute,
} as any)

const FeaturesAppAuthLoginRoute = FeaturesAppAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => FeaturesAppAuthRouteRoute,
} as any)

const FeaturesAppAuthForgotPasswordRoute =
  FeaturesAppAuthForgotPasswordImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => FeaturesAppAuthRouteRoute,
  } as any)

const FeaturesAppAuthConfirmOtpRoute = FeaturesAppAuthConfirmOtpImport.update({
  id: '/confirm-otp',
  path: '/confirm-otp',
  getParentRoute: () => FeaturesAppAuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/features/file-browser': {
      id: '/features/file-browser'
      path: '/features/file-browser'
      fullPath: '/features/file-browser'
      preLoaderRoute: typeof FeaturesFileBrowserRouteImport
      parentRoute: typeof rootRoute
    }
    '/libraries/react-form': {
      id: '/libraries/react-form'
      path: '/libraries/react-form'
      fullPath: '/libraries/react-form'
      preLoaderRoute: typeof LibrariesReactFormRouteImport
      parentRoute: typeof rootRoute
    }
    '/libraries/react-query': {
      id: '/libraries/react-query'
      path: '/libraries/react-query'
      fullPath: '/libraries/react-query'
      preLoaderRoute: typeof LibrariesReactQueryRouteImport
      parentRoute: typeof rootRoute
    }
    '/libraries/react-table': {
      id: '/libraries/react-table'
      path: '/libraries/react-table'
      fullPath: '/libraries/react-table'
      preLoaderRoute: typeof LibrariesReactTableRouteImport
      parentRoute: typeof rootRoute
    }
    '/libraries/shadcn': {
      id: '/libraries/shadcn'
      path: '/libraries/shadcn'
      fullPath: '/libraries/shadcn'
      preLoaderRoute: typeof LibrariesShadcnRouteImport
      parentRoute: typeof rootRoute
    }
    '/features/app/auth': {
      id: '/features/app/auth'
      path: '/features/app/auth'
      fullPath: '/features/app/auth'
      preLoaderRoute: typeof FeaturesAppAuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/libraries/react-form/checkbox-group': {
      id: '/libraries/react-form/checkbox-group'
      path: '/checkbox-group'
      fullPath: '/libraries/react-form/checkbox-group'
      preLoaderRoute: typeof LibrariesReactFormCheckboxGroupImport
      parentRoute: typeof LibrariesReactFormRouteImport
    }
    '/libraries/react-form/checkbox-with-label': {
      id: '/libraries/react-form/checkbox-with-label'
      path: '/checkbox-with-label'
      fullPath: '/libraries/react-form/checkbox-with-label'
      preLoaderRoute: typeof LibrariesReactFormCheckboxWithLabelImport
      parentRoute: typeof LibrariesReactFormRouteImport
    }
    '/libraries/react-form/combobox-checkbox-group': {
      id: '/libraries/react-form/combobox-checkbox-group'
      path: '/combobox-checkbox-group'
      fullPath: '/libraries/react-form/combobox-checkbox-group'
      preLoaderRoute: typeof LibrariesReactFormComboboxCheckboxGroupImport
      parentRoute: typeof LibrariesReactFormRouteImport
    }
    '/libraries/react-form/input-debounce': {
      id: '/libraries/react-form/input-debounce'
      path: '/input-debounce'
      fullPath: '/libraries/react-form/input-debounce'
      preLoaderRoute: typeof LibrariesReactFormInputDebounceImport
      parentRoute: typeof LibrariesReactFormRouteImport
    }
    '/libraries/react-form/select': {
      id: '/libraries/react-form/select'
      path: '/select'
      fullPath: '/libraries/react-form/select'
      preLoaderRoute: typeof LibrariesReactFormSelectImport
      parentRoute: typeof LibrariesReactFormRouteImport
    }
    '/libraries/react-form/standard-react-form': {
      id: '/libraries/react-form/standard-react-form'
      path: '/standard-react-form'
      fullPath: '/libraries/react-form/standard-react-form'
      preLoaderRoute: typeof LibrariesReactFormStandardReactFormImport
      parentRoute: typeof LibrariesReactFormRouteImport
    }
    '/libraries/react-form/with-zoos-form': {
      id: '/libraries/react-form/with-zoos-form'
      path: '/with-zoos-form'
      fullPath: '/libraries/react-form/with-zoos-form'
      preLoaderRoute: typeof LibrariesReactFormWithZoosFormImport
      parentRoute: typeof LibrariesReactFormRouteImport
    }
    '/libraries/react-query/use-mutation': {
      id: '/libraries/react-query/use-mutation'
      path: '/use-mutation'
      fullPath: '/libraries/react-query/use-mutation'
      preLoaderRoute: typeof LibrariesReactQueryUseMutationImport
      parentRoute: typeof LibrariesReactQueryRouteImport
    }
    '/libraries/react-query/use-query': {
      id: '/libraries/react-query/use-query'
      path: '/use-query'
      fullPath: '/libraries/react-query/use-query'
      preLoaderRoute: typeof LibrariesReactQueryUseQueryImport
      parentRoute: typeof LibrariesReactQueryRouteImport
    }
    '/libraries/react-table/custom-columns': {
      id: '/libraries/react-table/custom-columns'
      path: '/custom-columns'
      fullPath: '/libraries/react-table/custom-columns'
      preLoaderRoute: typeof LibrariesReactTableCustomColumnsImport
      parentRoute: typeof LibrariesReactTableRouteImport
    }
    '/libraries/react-table/expand-rows-cell': {
      id: '/libraries/react-table/expand-rows-cell'
      path: '/expand-rows-cell'
      fullPath: '/libraries/react-table/expand-rows-cell'
      preLoaderRoute: typeof LibrariesReactTableExpandRowsCellImport
      parentRoute: typeof LibrariesReactTableRouteImport
    }
    '/libraries/react-table/expand-rows-control': {
      id: '/libraries/react-table/expand-rows-control'
      path: '/expand-rows-control'
      fullPath: '/libraries/react-table/expand-rows-control'
      preLoaderRoute: typeof LibrariesReactTableExpandRowsControlImport
      parentRoute: typeof LibrariesReactTableRouteImport
    }
    '/libraries/react-table/full-customization': {
      id: '/libraries/react-table/full-customization'
      path: '/full-customization'
      fullPath: '/libraries/react-table/full-customization'
      preLoaderRoute: typeof LibrariesReactTableFullCustomizationImport
      parentRoute: typeof LibrariesReactTableRouteImport
    }
    '/libraries/react-table/merge-columns': {
      id: '/libraries/react-table/merge-columns'
      path: '/merge-columns'
      fullPath: '/libraries/react-table/merge-columns'
      preLoaderRoute: typeof LibrariesReactTableMergeColumnsImport
      parentRoute: typeof LibrariesReactTableRouteImport
    }
    '/libraries/react-table/standard': {
      id: '/libraries/react-table/standard'
      path: '/standard'
      fullPath: '/libraries/react-table/standard'
      preLoaderRoute: typeof LibrariesReactTableStandardImport
      parentRoute: typeof LibrariesReactTableRouteImport
    }
    '/libraries/shadcn/button': {
      id: '/libraries/shadcn/button'
      path: '/button'
      fullPath: '/libraries/shadcn/button'
      preLoaderRoute: typeof LibrariesShadcnButtonImport
      parentRoute: typeof LibrariesShadcnRouteImport
    }
    '/libraries/shadcn/checkbox': {
      id: '/libraries/shadcn/checkbox'
      path: '/checkbox'
      fullPath: '/libraries/shadcn/checkbox'
      preLoaderRoute: typeof LibrariesShadcnCheckboxImport
      parentRoute: typeof LibrariesShadcnRouteImport
    }
    '/libraries/shadcn/context-menu': {
      id: '/libraries/shadcn/context-menu'
      path: '/context-menu'
      fullPath: '/libraries/shadcn/context-menu'
      preLoaderRoute: typeof LibrariesShadcnContextMenuImport
      parentRoute: typeof LibrariesShadcnRouteImport
    }
    '/libraries/shadcn/popover': {
      id: '/libraries/shadcn/popover'
      path: '/popover'
      fullPath: '/libraries/shadcn/popover'
      preLoaderRoute: typeof LibrariesShadcnPopoverImport
      parentRoute: typeof LibrariesShadcnRouteImport
    }
    '/libraries/shadcn/propose-class-name-override': {
      id: '/libraries/shadcn/propose-class-name-override'
      path: '/propose-class-name-override'
      fullPath: '/libraries/shadcn/propose-class-name-override'
      preLoaderRoute: typeof LibrariesShadcnProposeClassNameOverrideImport
      parentRoute: typeof LibrariesShadcnRouteImport
    }
    '/libraries/shadcn/select': {
      id: '/libraries/shadcn/select'
      path: '/select'
      fullPath: '/libraries/shadcn/select'
      preLoaderRoute: typeof LibrariesShadcnSelectImport
      parentRoute: typeof LibrariesShadcnRouteImport
    }
    '/libraries/shadcn/use-debounce': {
      id: '/libraries/shadcn/use-debounce'
      path: '/use-debounce'
      fullPath: '/libraries/shadcn/use-debounce'
      preLoaderRoute: typeof LibrariesShadcnUseDebounceImport
      parentRoute: typeof LibrariesShadcnRouteImport
    }
    '/libraries/shadcn/use-reactive-state': {
      id: '/libraries/shadcn/use-reactive-state'
      path: '/use-reactive-state'
      fullPath: '/libraries/shadcn/use-reactive-state'
      preLoaderRoute: typeof LibrariesShadcnUseReactiveStateImport
      parentRoute: typeof LibrariesShadcnRouteImport
    }
    '/features/auth/': {
      id: '/features/auth/'
      path: '/features/auth'
      fullPath: '/features/auth'
      preLoaderRoute: typeof FeaturesAuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/features/file-browser/': {
      id: '/features/file-browser/'
      path: '/'
      fullPath: '/features/file-browser/'
      preLoaderRoute: typeof FeaturesFileBrowserIndexImport
      parentRoute: typeof FeaturesFileBrowserRouteImport
    }
    '/features/app/auth/confirm-otp': {
      id: '/features/app/auth/confirm-otp'
      path: '/confirm-otp'
      fullPath: '/features/app/auth/confirm-otp'
      preLoaderRoute: typeof FeaturesAppAuthConfirmOtpImport
      parentRoute: typeof FeaturesAppAuthRouteImport
    }
    '/features/app/auth/forgot-password': {
      id: '/features/app/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/features/app/auth/forgot-password'
      preLoaderRoute: typeof FeaturesAppAuthForgotPasswordImport
      parentRoute: typeof FeaturesAppAuthRouteImport
    }
    '/features/app/auth/login': {
      id: '/features/app/auth/login'
      path: '/login'
      fullPath: '/features/app/auth/login'
      preLoaderRoute: typeof FeaturesAppAuthLoginImport
      parentRoute: typeof FeaturesAppAuthRouteImport
    }
    '/features/app/auth/signup': {
      id: '/features/app/auth/signup'
      path: '/signup'
      fullPath: '/features/app/auth/signup'
      preLoaderRoute: typeof FeaturesAppAuthSignupImport
      parentRoute: typeof FeaturesAppAuthRouteImport
    }
  }
}

// Create and export the route tree

interface FeaturesFileBrowserRouteRouteChildren {
  FeaturesFileBrowserIndexRoute: typeof FeaturesFileBrowserIndexRoute
}

const FeaturesFileBrowserRouteRouteChildren: FeaturesFileBrowserRouteRouteChildren =
  {
    FeaturesFileBrowserIndexRoute: FeaturesFileBrowserIndexRoute,
  }

const FeaturesFileBrowserRouteRouteWithChildren =
  FeaturesFileBrowserRouteRoute._addFileChildren(
    FeaturesFileBrowserRouteRouteChildren,
  )

interface LibrariesReactFormRouteRouteChildren {
  LibrariesReactFormCheckboxGroupRoute: typeof LibrariesReactFormCheckboxGroupRoute
  LibrariesReactFormCheckboxWithLabelRoute: typeof LibrariesReactFormCheckboxWithLabelRoute
  LibrariesReactFormComboboxCheckboxGroupRoute: typeof LibrariesReactFormComboboxCheckboxGroupRoute
  LibrariesReactFormInputDebounceRoute: typeof LibrariesReactFormInputDebounceRoute
  LibrariesReactFormSelectRoute: typeof LibrariesReactFormSelectRoute
  LibrariesReactFormStandardReactFormRoute: typeof LibrariesReactFormStandardReactFormRoute
  LibrariesReactFormWithZoosFormRoute: typeof LibrariesReactFormWithZoosFormRoute
}

const LibrariesReactFormRouteRouteChildren: LibrariesReactFormRouteRouteChildren =
  {
    LibrariesReactFormCheckboxGroupRoute: LibrariesReactFormCheckboxGroupRoute,
    LibrariesReactFormCheckboxWithLabelRoute:
      LibrariesReactFormCheckboxWithLabelRoute,
    LibrariesReactFormComboboxCheckboxGroupRoute:
      LibrariesReactFormComboboxCheckboxGroupRoute,
    LibrariesReactFormInputDebounceRoute: LibrariesReactFormInputDebounceRoute,
    LibrariesReactFormSelectRoute: LibrariesReactFormSelectRoute,
    LibrariesReactFormStandardReactFormRoute:
      LibrariesReactFormStandardReactFormRoute,
    LibrariesReactFormWithZoosFormRoute: LibrariesReactFormWithZoosFormRoute,
  }

const LibrariesReactFormRouteRouteWithChildren =
  LibrariesReactFormRouteRoute._addFileChildren(
    LibrariesReactFormRouteRouteChildren,
  )

interface LibrariesReactQueryRouteRouteChildren {
  LibrariesReactQueryUseMutationRoute: typeof LibrariesReactQueryUseMutationRoute
  LibrariesReactQueryUseQueryRoute: typeof LibrariesReactQueryUseQueryRoute
}

const LibrariesReactQueryRouteRouteChildren: LibrariesReactQueryRouteRouteChildren =
  {
    LibrariesReactQueryUseMutationRoute: LibrariesReactQueryUseMutationRoute,
    LibrariesReactQueryUseQueryRoute: LibrariesReactQueryUseQueryRoute,
  }

const LibrariesReactQueryRouteRouteWithChildren =
  LibrariesReactQueryRouteRoute._addFileChildren(
    LibrariesReactQueryRouteRouteChildren,
  )

interface LibrariesReactTableRouteRouteChildren {
  LibrariesReactTableCustomColumnsRoute: typeof LibrariesReactTableCustomColumnsRoute
  LibrariesReactTableExpandRowsCellRoute: typeof LibrariesReactTableExpandRowsCellRoute
  LibrariesReactTableExpandRowsControlRoute: typeof LibrariesReactTableExpandRowsControlRoute
  LibrariesReactTableFullCustomizationRoute: typeof LibrariesReactTableFullCustomizationRoute
  LibrariesReactTableMergeColumnsRoute: typeof LibrariesReactTableMergeColumnsRoute
  LibrariesReactTableStandardRoute: typeof LibrariesReactTableStandardRoute
}

const LibrariesReactTableRouteRouteChildren: LibrariesReactTableRouteRouteChildren =
  {
    LibrariesReactTableCustomColumnsRoute:
      LibrariesReactTableCustomColumnsRoute,
    LibrariesReactTableExpandRowsCellRoute:
      LibrariesReactTableExpandRowsCellRoute,
    LibrariesReactTableExpandRowsControlRoute:
      LibrariesReactTableExpandRowsControlRoute,
    LibrariesReactTableFullCustomizationRoute:
      LibrariesReactTableFullCustomizationRoute,
    LibrariesReactTableMergeColumnsRoute: LibrariesReactTableMergeColumnsRoute,
    LibrariesReactTableStandardRoute: LibrariesReactTableStandardRoute,
  }

const LibrariesReactTableRouteRouteWithChildren =
  LibrariesReactTableRouteRoute._addFileChildren(
    LibrariesReactTableRouteRouteChildren,
  )

interface LibrariesShadcnRouteRouteChildren {
  LibrariesShadcnButtonRoute: typeof LibrariesShadcnButtonRoute
  LibrariesShadcnCheckboxRoute: typeof LibrariesShadcnCheckboxRoute
  LibrariesShadcnContextMenuRoute: typeof LibrariesShadcnContextMenuRoute
  LibrariesShadcnPopoverRoute: typeof LibrariesShadcnPopoverRoute
  LibrariesShadcnProposeClassNameOverrideRoute: typeof LibrariesShadcnProposeClassNameOverrideRoute
  LibrariesShadcnSelectRoute: typeof LibrariesShadcnSelectRoute
  LibrariesShadcnUseDebounceRoute: typeof LibrariesShadcnUseDebounceRoute
  LibrariesShadcnUseReactiveStateRoute: typeof LibrariesShadcnUseReactiveStateRoute
}

const LibrariesShadcnRouteRouteChildren: LibrariesShadcnRouteRouteChildren = {
  LibrariesShadcnButtonRoute: LibrariesShadcnButtonRoute,
  LibrariesShadcnCheckboxRoute: LibrariesShadcnCheckboxRoute,
  LibrariesShadcnContextMenuRoute: LibrariesShadcnContextMenuRoute,
  LibrariesShadcnPopoverRoute: LibrariesShadcnPopoverRoute,
  LibrariesShadcnProposeClassNameOverrideRoute:
    LibrariesShadcnProposeClassNameOverrideRoute,
  LibrariesShadcnSelectRoute: LibrariesShadcnSelectRoute,
  LibrariesShadcnUseDebounceRoute: LibrariesShadcnUseDebounceRoute,
  LibrariesShadcnUseReactiveStateRoute: LibrariesShadcnUseReactiveStateRoute,
}

const LibrariesShadcnRouteRouteWithChildren =
  LibrariesShadcnRouteRoute._addFileChildren(LibrariesShadcnRouteRouteChildren)

interface FeaturesAppAuthRouteRouteChildren {
  FeaturesAppAuthConfirmOtpRoute: typeof FeaturesAppAuthConfirmOtpRoute
  FeaturesAppAuthForgotPasswordRoute: typeof FeaturesAppAuthForgotPasswordRoute
  FeaturesAppAuthLoginRoute: typeof FeaturesAppAuthLoginRoute
  FeaturesAppAuthSignupRoute: typeof FeaturesAppAuthSignupRoute
}

const FeaturesAppAuthRouteRouteChildren: FeaturesAppAuthRouteRouteChildren = {
  FeaturesAppAuthConfirmOtpRoute: FeaturesAppAuthConfirmOtpRoute,
  FeaturesAppAuthForgotPasswordRoute: FeaturesAppAuthForgotPasswordRoute,
  FeaturesAppAuthLoginRoute: FeaturesAppAuthLoginRoute,
  FeaturesAppAuthSignupRoute: FeaturesAppAuthSignupRoute,
}

const FeaturesAppAuthRouteRouteWithChildren =
  FeaturesAppAuthRouteRoute._addFileChildren(FeaturesAppAuthRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/features/file-browser': typeof FeaturesFileBrowserRouteRouteWithChildren
  '/libraries/react-form': typeof LibrariesReactFormRouteRouteWithChildren
  '/libraries/react-query': typeof LibrariesReactQueryRouteRouteWithChildren
  '/libraries/react-table': typeof LibrariesReactTableRouteRouteWithChildren
  '/libraries/shadcn': typeof LibrariesShadcnRouteRouteWithChildren
  '/features/app/auth': typeof FeaturesAppAuthRouteRouteWithChildren
  '/libraries/react-form/checkbox-group': typeof LibrariesReactFormCheckboxGroupRoute
  '/libraries/react-form/checkbox-with-label': typeof LibrariesReactFormCheckboxWithLabelRoute
  '/libraries/react-form/combobox-checkbox-group': typeof LibrariesReactFormComboboxCheckboxGroupRoute
  '/libraries/react-form/input-debounce': typeof LibrariesReactFormInputDebounceRoute
  '/libraries/react-form/select': typeof LibrariesReactFormSelectRoute
  '/libraries/react-form/standard-react-form': typeof LibrariesReactFormStandardReactFormRoute
  '/libraries/react-form/with-zoos-form': typeof LibrariesReactFormWithZoosFormRoute
  '/libraries/react-query/use-mutation': typeof LibrariesReactQueryUseMutationRoute
  '/libraries/react-query/use-query': typeof LibrariesReactQueryUseQueryRoute
  '/libraries/react-table/custom-columns': typeof LibrariesReactTableCustomColumnsRoute
  '/libraries/react-table/expand-rows-cell': typeof LibrariesReactTableExpandRowsCellRoute
  '/libraries/react-table/expand-rows-control': typeof LibrariesReactTableExpandRowsControlRoute
  '/libraries/react-table/full-customization': typeof LibrariesReactTableFullCustomizationRoute
  '/libraries/react-table/merge-columns': typeof LibrariesReactTableMergeColumnsRoute
  '/libraries/react-table/standard': typeof LibrariesReactTableStandardRoute
  '/libraries/shadcn/button': typeof LibrariesShadcnButtonRoute
  '/libraries/shadcn/checkbox': typeof LibrariesShadcnCheckboxRoute
  '/libraries/shadcn/context-menu': typeof LibrariesShadcnContextMenuRoute
  '/libraries/shadcn/popover': typeof LibrariesShadcnPopoverRoute
  '/libraries/shadcn/propose-class-name-override': typeof LibrariesShadcnProposeClassNameOverrideRoute
  '/libraries/shadcn/select': typeof LibrariesShadcnSelectRoute
  '/libraries/shadcn/use-debounce': typeof LibrariesShadcnUseDebounceRoute
  '/libraries/shadcn/use-reactive-state': typeof LibrariesShadcnUseReactiveStateRoute
  '/features/auth': typeof FeaturesAuthIndexRoute
  '/features/file-browser/': typeof FeaturesFileBrowserIndexRoute
  '/features/app/auth/confirm-otp': typeof FeaturesAppAuthConfirmOtpRoute
  '/features/app/auth/forgot-password': typeof FeaturesAppAuthForgotPasswordRoute
  '/features/app/auth/login': typeof FeaturesAppAuthLoginRoute
  '/features/app/auth/signup': typeof FeaturesAppAuthSignupRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/libraries/react-form': typeof LibrariesReactFormRouteRouteWithChildren
  '/libraries/react-query': typeof LibrariesReactQueryRouteRouteWithChildren
  '/libraries/react-table': typeof LibrariesReactTableRouteRouteWithChildren
  '/libraries/shadcn': typeof LibrariesShadcnRouteRouteWithChildren
  '/features/app/auth': typeof FeaturesAppAuthRouteRouteWithChildren
  '/libraries/react-form/checkbox-group': typeof LibrariesReactFormCheckboxGroupRoute
  '/libraries/react-form/checkbox-with-label': typeof LibrariesReactFormCheckboxWithLabelRoute
  '/libraries/react-form/combobox-checkbox-group': typeof LibrariesReactFormComboboxCheckboxGroupRoute
  '/libraries/react-form/input-debounce': typeof LibrariesReactFormInputDebounceRoute
  '/libraries/react-form/select': typeof LibrariesReactFormSelectRoute
  '/libraries/react-form/standard-react-form': typeof LibrariesReactFormStandardReactFormRoute
  '/libraries/react-form/with-zoos-form': typeof LibrariesReactFormWithZoosFormRoute
  '/libraries/react-query/use-mutation': typeof LibrariesReactQueryUseMutationRoute
  '/libraries/react-query/use-query': typeof LibrariesReactQueryUseQueryRoute
  '/libraries/react-table/custom-columns': typeof LibrariesReactTableCustomColumnsRoute
  '/libraries/react-table/expand-rows-cell': typeof LibrariesReactTableExpandRowsCellRoute
  '/libraries/react-table/expand-rows-control': typeof LibrariesReactTableExpandRowsControlRoute
  '/libraries/react-table/full-customization': typeof LibrariesReactTableFullCustomizationRoute
  '/libraries/react-table/merge-columns': typeof LibrariesReactTableMergeColumnsRoute
  '/libraries/react-table/standard': typeof LibrariesReactTableStandardRoute
  '/libraries/shadcn/button': typeof LibrariesShadcnButtonRoute
  '/libraries/shadcn/checkbox': typeof LibrariesShadcnCheckboxRoute
  '/libraries/shadcn/context-menu': typeof LibrariesShadcnContextMenuRoute
  '/libraries/shadcn/popover': typeof LibrariesShadcnPopoverRoute
  '/libraries/shadcn/propose-class-name-override': typeof LibrariesShadcnProposeClassNameOverrideRoute
  '/libraries/shadcn/select': typeof LibrariesShadcnSelectRoute
  '/libraries/shadcn/use-debounce': typeof LibrariesShadcnUseDebounceRoute
  '/libraries/shadcn/use-reactive-state': typeof LibrariesShadcnUseReactiveStateRoute
  '/features/auth': typeof FeaturesAuthIndexRoute
  '/features/file-browser': typeof FeaturesFileBrowserIndexRoute
  '/features/app/auth/confirm-otp': typeof FeaturesAppAuthConfirmOtpRoute
  '/features/app/auth/forgot-password': typeof FeaturesAppAuthForgotPasswordRoute
  '/features/app/auth/login': typeof FeaturesAppAuthLoginRoute
  '/features/app/auth/signup': typeof FeaturesAppAuthSignupRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/features/file-browser': typeof FeaturesFileBrowserRouteRouteWithChildren
  '/libraries/react-form': typeof LibrariesReactFormRouteRouteWithChildren
  '/libraries/react-query': typeof LibrariesReactQueryRouteRouteWithChildren
  '/libraries/react-table': typeof LibrariesReactTableRouteRouteWithChildren
  '/libraries/shadcn': typeof LibrariesShadcnRouteRouteWithChildren
  '/features/app/auth': typeof FeaturesAppAuthRouteRouteWithChildren
  '/libraries/react-form/checkbox-group': typeof LibrariesReactFormCheckboxGroupRoute
  '/libraries/react-form/checkbox-with-label': typeof LibrariesReactFormCheckboxWithLabelRoute
  '/libraries/react-form/combobox-checkbox-group': typeof LibrariesReactFormComboboxCheckboxGroupRoute
  '/libraries/react-form/input-debounce': typeof LibrariesReactFormInputDebounceRoute
  '/libraries/react-form/select': typeof LibrariesReactFormSelectRoute
  '/libraries/react-form/standard-react-form': typeof LibrariesReactFormStandardReactFormRoute
  '/libraries/react-form/with-zoos-form': typeof LibrariesReactFormWithZoosFormRoute
  '/libraries/react-query/use-mutation': typeof LibrariesReactQueryUseMutationRoute
  '/libraries/react-query/use-query': typeof LibrariesReactQueryUseQueryRoute
  '/libraries/react-table/custom-columns': typeof LibrariesReactTableCustomColumnsRoute
  '/libraries/react-table/expand-rows-cell': typeof LibrariesReactTableExpandRowsCellRoute
  '/libraries/react-table/expand-rows-control': typeof LibrariesReactTableExpandRowsControlRoute
  '/libraries/react-table/full-customization': typeof LibrariesReactTableFullCustomizationRoute
  '/libraries/react-table/merge-columns': typeof LibrariesReactTableMergeColumnsRoute
  '/libraries/react-table/standard': typeof LibrariesReactTableStandardRoute
  '/libraries/shadcn/button': typeof LibrariesShadcnButtonRoute
  '/libraries/shadcn/checkbox': typeof LibrariesShadcnCheckboxRoute
  '/libraries/shadcn/context-menu': typeof LibrariesShadcnContextMenuRoute
  '/libraries/shadcn/popover': typeof LibrariesShadcnPopoverRoute
  '/libraries/shadcn/propose-class-name-override': typeof LibrariesShadcnProposeClassNameOverrideRoute
  '/libraries/shadcn/select': typeof LibrariesShadcnSelectRoute
  '/libraries/shadcn/use-debounce': typeof LibrariesShadcnUseDebounceRoute
  '/libraries/shadcn/use-reactive-state': typeof LibrariesShadcnUseReactiveStateRoute
  '/features/auth/': typeof FeaturesAuthIndexRoute
  '/features/file-browser/': typeof FeaturesFileBrowserIndexRoute
  '/features/app/auth/confirm-otp': typeof FeaturesAppAuthConfirmOtpRoute
  '/features/app/auth/forgot-password': typeof FeaturesAppAuthForgotPasswordRoute
  '/features/app/auth/login': typeof FeaturesAppAuthLoginRoute
  '/features/app/auth/signup': typeof FeaturesAppAuthSignupRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/features/file-browser'
    | '/libraries/react-form'
    | '/libraries/react-query'
    | '/libraries/react-table'
    | '/libraries/shadcn'
    | '/features/app/auth'
    | '/libraries/react-form/checkbox-group'
    | '/libraries/react-form/checkbox-with-label'
    | '/libraries/react-form/combobox-checkbox-group'
    | '/libraries/react-form/input-debounce'
    | '/libraries/react-form/select'
    | '/libraries/react-form/standard-react-form'
    | '/libraries/react-form/with-zoos-form'
    | '/libraries/react-query/use-mutation'
    | '/libraries/react-query/use-query'
    | '/libraries/react-table/custom-columns'
    | '/libraries/react-table/expand-rows-cell'
    | '/libraries/react-table/expand-rows-control'
    | '/libraries/react-table/full-customization'
    | '/libraries/react-table/merge-columns'
    | '/libraries/react-table/standard'
    | '/libraries/shadcn/button'
    | '/libraries/shadcn/checkbox'
    | '/libraries/shadcn/context-menu'
    | '/libraries/shadcn/popover'
    | '/libraries/shadcn/propose-class-name-override'
    | '/libraries/shadcn/select'
    | '/libraries/shadcn/use-debounce'
    | '/libraries/shadcn/use-reactive-state'
    | '/features/auth'
    | '/features/file-browser/'
    | '/features/app/auth/confirm-otp'
    | '/features/app/auth/forgot-password'
    | '/features/app/auth/login'
    | '/features/app/auth/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/libraries/react-form'
    | '/libraries/react-query'
    | '/libraries/react-table'
    | '/libraries/shadcn'
    | '/features/app/auth'
    | '/libraries/react-form/checkbox-group'
    | '/libraries/react-form/checkbox-with-label'
    | '/libraries/react-form/combobox-checkbox-group'
    | '/libraries/react-form/input-debounce'
    | '/libraries/react-form/select'
    | '/libraries/react-form/standard-react-form'
    | '/libraries/react-form/with-zoos-form'
    | '/libraries/react-query/use-mutation'
    | '/libraries/react-query/use-query'
    | '/libraries/react-table/custom-columns'
    | '/libraries/react-table/expand-rows-cell'
    | '/libraries/react-table/expand-rows-control'
    | '/libraries/react-table/full-customization'
    | '/libraries/react-table/merge-columns'
    | '/libraries/react-table/standard'
    | '/libraries/shadcn/button'
    | '/libraries/shadcn/checkbox'
    | '/libraries/shadcn/context-menu'
    | '/libraries/shadcn/popover'
    | '/libraries/shadcn/propose-class-name-override'
    | '/libraries/shadcn/select'
    | '/libraries/shadcn/use-debounce'
    | '/libraries/shadcn/use-reactive-state'
    | '/features/auth'
    | '/features/file-browser'
    | '/features/app/auth/confirm-otp'
    | '/features/app/auth/forgot-password'
    | '/features/app/auth/login'
    | '/features/app/auth/signup'
  id:
    | '__root__'
    | '/'
    | '/features/file-browser'
    | '/libraries/react-form'
    | '/libraries/react-query'
    | '/libraries/react-table'
    | '/libraries/shadcn'
    | '/features/app/auth'
    | '/libraries/react-form/checkbox-group'
    | '/libraries/react-form/checkbox-with-label'
    | '/libraries/react-form/combobox-checkbox-group'
    | '/libraries/react-form/input-debounce'
    | '/libraries/react-form/select'
    | '/libraries/react-form/standard-react-form'
    | '/libraries/react-form/with-zoos-form'
    | '/libraries/react-query/use-mutation'
    | '/libraries/react-query/use-query'
    | '/libraries/react-table/custom-columns'
    | '/libraries/react-table/expand-rows-cell'
    | '/libraries/react-table/expand-rows-control'
    | '/libraries/react-table/full-customization'
    | '/libraries/react-table/merge-columns'
    | '/libraries/react-table/standard'
    | '/libraries/shadcn/button'
    | '/libraries/shadcn/checkbox'
    | '/libraries/shadcn/context-menu'
    | '/libraries/shadcn/popover'
    | '/libraries/shadcn/propose-class-name-override'
    | '/libraries/shadcn/select'
    | '/libraries/shadcn/use-debounce'
    | '/libraries/shadcn/use-reactive-state'
    | '/features/auth/'
    | '/features/file-browser/'
    | '/features/app/auth/confirm-otp'
    | '/features/app/auth/forgot-password'
    | '/features/app/auth/login'
    | '/features/app/auth/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FeaturesFileBrowserRouteRoute: typeof FeaturesFileBrowserRouteRouteWithChildren
  LibrariesReactFormRouteRoute: typeof LibrariesReactFormRouteRouteWithChildren
  LibrariesReactQueryRouteRoute: typeof LibrariesReactQueryRouteRouteWithChildren
  LibrariesReactTableRouteRoute: typeof LibrariesReactTableRouteRouteWithChildren
  LibrariesShadcnRouteRoute: typeof LibrariesShadcnRouteRouteWithChildren
  FeaturesAppAuthRouteRoute: typeof FeaturesAppAuthRouteRouteWithChildren
  FeaturesAuthIndexRoute: typeof FeaturesAuthIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FeaturesFileBrowserRouteRoute: FeaturesFileBrowserRouteRouteWithChildren,
  LibrariesReactFormRouteRoute: LibrariesReactFormRouteRouteWithChildren,
  LibrariesReactQueryRouteRoute: LibrariesReactQueryRouteRouteWithChildren,
  LibrariesReactTableRouteRoute: LibrariesReactTableRouteRouteWithChildren,
  LibrariesShadcnRouteRoute: LibrariesShadcnRouteRouteWithChildren,
  FeaturesAppAuthRouteRoute: FeaturesAppAuthRouteRouteWithChildren,
  FeaturesAuthIndexRoute: FeaturesAuthIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/features/file-browser",
        "/libraries/react-form",
        "/libraries/react-query",
        "/libraries/react-table",
        "/libraries/shadcn",
        "/features/app/auth",
        "/features/auth/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/features/file-browser": {
      "filePath": "features/file-browser/route.tsx",
      "children": [
        "/features/file-browser/"
      ]
    },
    "/libraries/react-form": {
      "filePath": "libraries/react-form/route.tsx",
      "children": [
        "/libraries/react-form/checkbox-group",
        "/libraries/react-form/checkbox-with-label",
        "/libraries/react-form/combobox-checkbox-group",
        "/libraries/react-form/input-debounce",
        "/libraries/react-form/select",
        "/libraries/react-form/standard-react-form",
        "/libraries/react-form/with-zoos-form"
      ]
    },
    "/libraries/react-query": {
      "filePath": "libraries/react-query/route.tsx",
      "children": [
        "/libraries/react-query/use-mutation",
        "/libraries/react-query/use-query"
      ]
    },
    "/libraries/react-table": {
      "filePath": "libraries/react-table/route.tsx",
      "children": [
        "/libraries/react-table/custom-columns",
        "/libraries/react-table/expand-rows-cell",
        "/libraries/react-table/expand-rows-control",
        "/libraries/react-table/full-customization",
        "/libraries/react-table/merge-columns",
        "/libraries/react-table/standard"
      ]
    },
    "/libraries/shadcn": {
      "filePath": "libraries/shadcn/route.tsx",
      "children": [
        "/libraries/shadcn/button",
        "/libraries/shadcn/checkbox",
        "/libraries/shadcn/context-menu",
        "/libraries/shadcn/popover",
        "/libraries/shadcn/propose-class-name-override",
        "/libraries/shadcn/select",
        "/libraries/shadcn/use-debounce",
        "/libraries/shadcn/use-reactive-state"
      ]
    },
    "/features/app/auth": {
      "filePath": "features/app/auth/route.tsx",
      "children": [
        "/features/app/auth/confirm-otp",
        "/features/app/auth/forgot-password",
        "/features/app/auth/login",
        "/features/app/auth/signup"
      ]
    },
    "/libraries/react-form/checkbox-group": {
      "filePath": "libraries/react-form/checkbox-group.tsx",
      "parent": "/libraries/react-form"
    },
    "/libraries/react-form/checkbox-with-label": {
      "filePath": "libraries/react-form/checkbox-with-label.tsx",
      "parent": "/libraries/react-form"
    },
    "/libraries/react-form/combobox-checkbox-group": {
      "filePath": "libraries/react-form/combobox-checkbox-group.tsx",
      "parent": "/libraries/react-form"
    },
    "/libraries/react-form/input-debounce": {
      "filePath": "libraries/react-form/input-debounce.tsx",
      "parent": "/libraries/react-form"
    },
    "/libraries/react-form/select": {
      "filePath": "libraries/react-form/select.tsx",
      "parent": "/libraries/react-form"
    },
    "/libraries/react-form/standard-react-form": {
      "filePath": "libraries/react-form/standard-react-form.tsx",
      "parent": "/libraries/react-form"
    },
    "/libraries/react-form/with-zoos-form": {
      "filePath": "libraries/react-form/with-zoos-form.tsx",
      "parent": "/libraries/react-form"
    },
    "/libraries/react-query/use-mutation": {
      "filePath": "libraries/react-query/use-mutation.tsx",
      "parent": "/libraries/react-query"
    },
    "/libraries/react-query/use-query": {
      "filePath": "libraries/react-query/use-query.tsx",
      "parent": "/libraries/react-query"
    },
    "/libraries/react-table/custom-columns": {
      "filePath": "libraries/react-table/custom-columns.tsx",
      "parent": "/libraries/react-table"
    },
    "/libraries/react-table/expand-rows-cell": {
      "filePath": "libraries/react-table/expand-rows-cell.tsx",
      "parent": "/libraries/react-table"
    },
    "/libraries/react-table/expand-rows-control": {
      "filePath": "libraries/react-table/expand-rows-control.tsx",
      "parent": "/libraries/react-table"
    },
    "/libraries/react-table/full-customization": {
      "filePath": "libraries/react-table/full-customization.tsx",
      "parent": "/libraries/react-table"
    },
    "/libraries/react-table/merge-columns": {
      "filePath": "libraries/react-table/merge-columns.tsx",
      "parent": "/libraries/react-table"
    },
    "/libraries/react-table/standard": {
      "filePath": "libraries/react-table/standard.tsx",
      "parent": "/libraries/react-table"
    },
    "/libraries/shadcn/button": {
      "filePath": "libraries/shadcn/button.tsx",
      "parent": "/libraries/shadcn"
    },
    "/libraries/shadcn/checkbox": {
      "filePath": "libraries/shadcn/checkbox.tsx",
      "parent": "/libraries/shadcn"
    },
    "/libraries/shadcn/context-menu": {
      "filePath": "libraries/shadcn/context-menu.tsx",
      "parent": "/libraries/shadcn"
    },
    "/libraries/shadcn/popover": {
      "filePath": "libraries/shadcn/popover.tsx",
      "parent": "/libraries/shadcn"
    },
    "/libraries/shadcn/propose-class-name-override": {
      "filePath": "libraries/shadcn/propose-class-name-override.tsx",
      "parent": "/libraries/shadcn"
    },
    "/libraries/shadcn/select": {
      "filePath": "libraries/shadcn/select.tsx",
      "parent": "/libraries/shadcn"
    },
    "/libraries/shadcn/use-debounce": {
      "filePath": "libraries/shadcn/use-debounce.tsx",
      "parent": "/libraries/shadcn"
    },
    "/libraries/shadcn/use-reactive-state": {
      "filePath": "libraries/shadcn/use-reactive-state.tsx",
      "parent": "/libraries/shadcn"
    },
    "/features/auth/": {
      "filePath": "features/auth/index.tsx"
    },
    "/features/file-browser/": {
      "filePath": "features/file-browser/index.tsx",
      "parent": "/features/file-browser"
    },
    "/features/app/auth/confirm-otp": {
      "filePath": "features/app/auth/confirm-otp.tsx",
      "parent": "/features/app/auth"
    },
    "/features/app/auth/forgot-password": {
      "filePath": "features/app/auth/forgot-password.tsx",
      "parent": "/features/app/auth"
    },
    "/features/app/auth/login": {
      "filePath": "features/app/auth/login.tsx",
      "parent": "/features/app/auth"
    },
    "/features/app/auth/signup": {
      "filePath": "features/app/auth/signup.tsx",
      "parent": "/features/app/auth"
    }
  }
}
ROUTE_MANIFEST_END */
